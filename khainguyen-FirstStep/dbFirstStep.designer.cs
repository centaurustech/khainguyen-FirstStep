#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace khainguyen_FirstStep
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
    using khainguyen_FirstStep.Areas.AdminCP.Models;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Firststep_db")]
	public partial class dbFirstStepDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
	#region Extensibility Method Definitions
	partial void OnCreated();
	partial void InsertEntityTrend(EntityTrend instance);
	partial void UpdateEntityTrend(EntityTrend instance);
	partial void DeleteEntityTrend(EntityTrend instance);
	partial void InsertEntityBanner(EntityBanner instance);
	partial void UpdateEntityBanner(EntityBanner instance);
	partial void DeleteEntityBanner(EntityBanner instance);
	partial void InsertEntityBaoCao(EntityBaoCao instance);
	partial void UpdateEntityBaoCao(EntityBaoCao instance);
	partial void DeleteEntityBaoCao(EntityBaoCao instance);
	partial void InsertEntityBinhLuan(EntityBinhLuan instance);
	partial void UpdateEntityBinhLuan(EntityBinhLuan instance);
	partial void DeleteEntityBinhLuan(EntityBinhLuan instance);
	partial void InsertEntityDanhMuc(EntityDanhMuc instance);
	partial void UpdateEntityDanhMuc(EntityDanhMuc instance);
	partial void DeleteEntityDanhMuc(EntityDanhMuc instance);
	partial void InsertEntityDuAn(EntityDuAn instance);
	partial void UpdateEntityDuAn(EntityDuAn instance);
	partial void DeleteEntityDuAn(EntityDuAn instance);
	partial void InsertEntityHoatDong(EntityHoatDong instance);
	partial void UpdateEntityHoatDong(EntityHoatDong instance);
	partial void DeleteEntityHoatDong(EntityHoatDong instance);
	partial void InsertEntityPhanThuong(EntityPhanThuong instance);
	partial void UpdateEntityPhanThuong(EntityPhanThuong instance);
	partial void DeleteEntityPhanThuong(EntityPhanThuong instance);
	partial void InsertEntityQuote(EntityQuote instance);
	partial void UpdateEntityQuote(EntityQuote instance);
	partial void DeleteEntityQuote(EntityQuote instance);
	partial void InsertEntityTheoDoi(EntityTheoDoi instance);
	partial void UpdateEntityTheoDoi(EntityTheoDoi instance);
	partial void DeleteEntityTheoDoi(EntityTheoDoi instance);
	partial void InsertEntityTimBan(EntityTimBan instance);
	partial void UpdateEntityTimBan(EntityTimBan instance);
	partial void DeleteEntityTimBan(EntityTimBan instance);
	partial void InsertEntityUser(EntityUser instance);
	partial void UpdateEntityUser(EntityUser instance);
	partial void DeleteEntityUser(EntityUser instance);
	partial void InsertEntityCapNhatDuAn(EntityCapNhatDuAn instance);
	partial void UpdateEntityCapNhatDuAn(EntityCapNhatDuAn instance);
	partial void DeleteEntityCapNhatDuAn(EntityCapNhatDuAn instance);
	partial void InsertEntityChiTietDanhMuc(EntityChiTietDanhMuc instance);
	partial void UpdateEntityChiTietDanhMuc(EntityChiTietDanhMuc instance);
	partial void DeleteEntityChiTietDanhMuc(EntityChiTietDanhMuc instance);
	partial void InsertEntityChiTietDuAn(EntityChiTietDuAn instance);
	partial void UpdateEntityChiTietDuAn(EntityChiTietDuAn instance);
	partial void DeleteEntityChiTietDuAn(EntityChiTietDuAn instance);
	partial void InsertEntityDauTu(EntityDauTu instance);
	partial void UpdateEntityDauTu(EntityDauTu instance);
	partial void DeleteEntityDauTu(EntityDauTu instance);
	partial void InsertEntityDuAnFeature(EntityDuAnFeature instance);
	partial void UpdateEntityDuAnFeature(EntityDuAnFeature instance);
	partial void DeleteEntityDuAnFeature(EntityDuAnFeature instance);
	partial void InsertEntityDuAnTag(EntityDuAnTag instance);
	partial void UpdateEntityDuAnTag(EntityDuAnTag instance);
	partial void DeleteEntityDuAnTag(EntityDuAnTag instance);
	partial void InsertEntityFAQ(EntityFAQ instance);
	partial void UpdateEntityFAQ(EntityFAQ instance);
	partial void DeleteEntityFAQ(EntityFAQ instance);
	partial void InsertEntityFAQ1(EntityFAQ1 instance);
	partial void UpdateEntityFAQ1(EntityFAQ1 instance);
	partial void DeleteEntityFAQ1(EntityFAQ1 instance);
	partial void InsertEntityFeedbackFAQ(EntityFeedbackFAQ instance);
	partial void UpdateEntityFeedbackFAQ(EntityFeedbackFAQ instance);
	partial void DeleteEntityFeedbackFAQ(EntityFeedbackFAQ instance);
	partial void InsertEntityGroupFAQ(EntityGroupFAQ instance);
	partial void UpdateEntityGroupFAQ(EntityGroupFAQ instance);
	partial void DeleteEntityGroupFAQ(EntityGroupFAQ instance);
	partial void InsertEntityHomePage(EntityHomePage instance);
	partial void UpdateEntityHomePage(EntityHomePage instance);
	partial void DeleteEntityHomePage(EntityHomePage instance);
	partial void InsertEntityLoaiFAQ(EntityLoaiFAQ instance);
	partial void UpdateEntityLoaiFAQ(EntityLoaiFAQ instance);
	partial void DeleteEntityLoaiFAQ(EntityLoaiFAQ instance);
	partial void InsertEntityLoaiTaiKhoan(EntityLoaiTaiKhoan instance);
	partial void UpdateEntityLoaiTaiKhoan(EntityLoaiTaiKhoan instance);
	partial void DeleteEntityLoaiTaiKhoan(EntityLoaiTaiKhoan instance);
	partial void InsertEntityNhomChienDich(EntityNhomChienDich instance);
	partial void UpdateEntityNhomChienDich(EntityNhomChienDich instance);
	partial void DeleteEntityNhomChienDich(EntityNhomChienDich instance);
	partial void InsertEntityNoiDungLink(EntityNoiDungLink instance);
	partial void UpdateEntityNoiDungLink(EntityNoiDungLink instance);
	partial void DeleteEntityNoiDungLink(EntityNoiDungLink instance);
	partial void InsertEntityTheoDoiDuAn(EntityTheoDoiDuAn instance);
	partial void UpdateEntityTheoDoiDuAn(EntityTheoDoiDuAn instance);
	partial void DeleteEntityTheoDoiDuAn(EntityTheoDoiDuAn instance);
	partial void InsertEntityThongTinDuAn(EntityThongTinDuAn instance);
	partial void UpdateEntityThongTinDuAn(EntityThongTinDuAn instance);
	partial void DeleteEntityThongTinDuAn(EntityThongTinDuAn instance);
	partial void InsertEntityThongTinTaiKhoan(EntityThongTinTaiKhoan instance);
	partial void UpdateEntityThongTinTaiKhoan(EntityThongTinTaiKhoan instance);
	partial void DeleteEntityThongTinTaiKhoan(EntityThongTinTaiKhoan instance);
	partial void InsertEntityTinNhan(EntityTinNhan instance);
	partial void UpdateEntityTinNhan(EntityTinNhan instance);
	partial void DeleteEntityTinNhan(EntityTinNhan instance);
	#endregion
		
		public dbFirstStepDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Firststep_dbConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbFirstStepDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbFirstStepDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbFirstStepDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbFirstStepDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<EntityAdmin> EntityAdmins
		{
			get
			{
				return this.GetTable<EntityAdmin>();
			}
		}
		
		public System.Data.Linq.Table<EntityTrend> EntityTrends
		{
			get
			{
				return this.GetTable<EntityTrend>();
			}
		}
		
		public System.Data.Linq.Table<EntityBanner> EntityBanners
		{
			get
			{
				return this.GetTable<EntityBanner>();
			}
		}
		
		public System.Data.Linq.Table<EntityBaoCao> EntityBaoCaos
		{
			get
			{
				return this.GetTable<EntityBaoCao>();
			}
		}
		
		public System.Data.Linq.Table<EntityBinhLuan> EntityBinhLuans
		{
			get
			{
				return this.GetTable<EntityBinhLuan>();
			}
		}
		
		public System.Data.Linq.Table<EntityDanhMuc> EntityDanhMucs
		{
			get
			{
				return this.GetTable<EntityDanhMuc>();
			}
		}
		
		public System.Data.Linq.Table<EntityDuAn> EntityDuAns
		{
			get
			{
				return this.GetTable<EntityDuAn>();
			}
		}
		
		public System.Data.Linq.Table<EntityHoatDong> EntityHoatDongs
		{
			get
			{
				return this.GetTable<EntityHoatDong>();
			}
		}
		
		public System.Data.Linq.Table<EntityPhanThuong> EntityPhanThuongs
		{
			get
			{
				return this.GetTable<EntityPhanThuong>();
			}
		}
		
		public System.Data.Linq.Table<EntityQuote> EntityQuotes
		{
			get
			{
				return this.GetTable<EntityQuote>();
			}
		}
		
		public System.Data.Linq.Table<EntityTheoDoi> EntityTheoDois
		{
			get
			{
				return this.GetTable<EntityTheoDoi>();
			}
		}
		
		public System.Data.Linq.Table<EntityTimBan> EntityTimBans
		{
			get
			{
				return this.GetTable<EntityTimBan>();
			}
		}
		
		public System.Data.Linq.Table<EntityUser> EntityUsers
		{
			get
			{
				return this.GetTable<EntityUser>();
			}
		}
		
		public System.Data.Linq.Table<EntityCapNhatDuAn> EntityCapNhatDuAns
		{
			get
			{
				return this.GetTable<EntityCapNhatDuAn>();
			}
		}
		
		public System.Data.Linq.Table<EntityChiTietDanhMuc> EntityChiTietDanhMucs
		{
			get
			{
				return this.GetTable<EntityChiTietDanhMuc>();
			}
		}
		
		public System.Data.Linq.Table<EntityChiTietDuAn> EntityChiTietDuAns
		{
			get
			{
				return this.GetTable<EntityChiTietDuAn>();
			}
		}
		
		public System.Data.Linq.Table<EntityDauTu> EntityDauTus
		{
			get
			{
				return this.GetTable<EntityDauTu>();
			}
		}
		
		public System.Data.Linq.Table<EntityDuAnFeature> EntityDuAnFeatures
		{
			get
			{
				return this.GetTable<EntityDuAnFeature>();
			}
		}
		
		public System.Data.Linq.Table<EntityDuAnTag> EntityDuAnTags
		{
			get
			{
				return this.GetTable<EntityDuAnTag>();
			}
		}
		
		public System.Data.Linq.Table<EntityFAQ> EntityFAQs
		{
			get
			{
				return this.GetTable<EntityFAQ>();
			}
		}
		
		public System.Data.Linq.Table<EntityFAQ1> EntityFAQ1s
		{
			get
			{
				return this.GetTable<EntityFAQ1>();
			}
		}
		
		public System.Data.Linq.Table<EntityFeedbackFAQ> EntityFeedbackFAQs
		{
			get
			{
				return this.GetTable<EntityFeedbackFAQ>();
			}
		}
		
		public System.Data.Linq.Table<EntityGroupFAQ> EntityGroupFAQs
		{
			get
			{
				return this.GetTable<EntityGroupFAQ>();
			}
		}
		
		public System.Data.Linq.Table<EntityHomePage> EntityHomePages
		{
			get
			{
				return this.GetTable<EntityHomePage>();
			}
		}
		
		public System.Data.Linq.Table<EntityLoaiFAQ> EntityLoaiFAQs
		{
			get
			{
				return this.GetTable<EntityLoaiFAQ>();
			}
		}
		
		public System.Data.Linq.Table<EntityLoaiTaiKhoan> EntityLoaiTaiKhoans
		{
			get
			{
				return this.GetTable<EntityLoaiTaiKhoan>();
			}
		}
		
		public System.Data.Linq.Table<EntityNhomChienDich> EntityNhomChienDiches
		{
			get
			{
				return this.GetTable<EntityNhomChienDich>();
			}
		}
		
		public System.Data.Linq.Table<EntityNoiDungLink> EntityNoiDungLinks
		{
			get
			{
				return this.GetTable<EntityNoiDungLink>();
			}
		}
		
		public System.Data.Linq.Table<EntityTheoDoiDuAn> EntityTheoDoiDuAns
		{
			get
			{
				return this.GetTable<EntityTheoDoiDuAn>();
			}
		}
		
		public System.Data.Linq.Table<EntityThongTinDuAn> EntityThongTinDuAns
		{
			get
			{
				return this.GetTable<EntityThongTinDuAn>();
			}
		}
		
		public System.Data.Linq.Table<EntityThongTinTaiKhoan> EntityThongTinTaiKhoans
		{
			get
			{
				return this.GetTable<EntityThongTinTaiKhoan>();
			}
		}
		
		public System.Data.Linq.Table<EntityTinNhan> EntityTinNhans
		{
			get
			{
				return this.GetTable<EntityTinNhan>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntityAdmin")]
	public partial class EntityAdmin
	{
		
		private string _Username;
		
		private string _Pass;
		
		public EntityAdmin()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(150)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this._Username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pass", DbType="NVarChar(350)")]
		public string Pass
		{
			get
			{
				return this._Pass;
			}
			set
			{
				if ((this._Pass != value))
				{
					this._Pass = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="firststep.EntityTrend")]
	public partial class EntityTrend : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TrendName;
		
		private System.Nullable<int> _IdCategory;
		
		private System.Nullable<bool> _TrangThai;
		
		private EntityRef<EntityDanhMuc> _EntityDanhMuc;
		
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(int value);
	partial void OnIdChanged();
	partial void OnTrendNameChanging(string value);
	partial void OnTrendNameChanged();
	partial void OnIdCategoryChanging(System.Nullable<int> value);
	partial void OnIdCategoryChanged();
	partial void OnTrangThaiChanging(System.Nullable<bool> value);
	partial void OnTrangThaiChanged();
	#endregion
		
		public EntityTrend()
		{
			this._EntityDanhMuc = default(EntityRef<EntityDanhMuc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrendName", DbType="NVarChar(300)")]
		public string TrendName
		{
			get
			{
				return this._TrendName;
			}
			set
			{
				if ((this._TrendName != value))
				{
					this.OnTrendNameChanging(value);
					this.SendPropertyChanging();
					this._TrendName = value;
					this.SendPropertyChanged("TrendName");
					this.OnTrendNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCategory", DbType="Int")]
		public System.Nullable<int> IdCategory
		{
			get
			{
				return this._IdCategory;
			}
			set
			{
				if ((this._IdCategory != value))
				{
					if (this._EntityDanhMuc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCategoryChanging(value);
					this.SendPropertyChanging();
					this._IdCategory = value;
					this.SendPropertyChanged("IdCategory");
					this.OnIdCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Bit")]
		public System.Nullable<bool> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDanhMuc_EntityTrend", Storage="_EntityDanhMuc", ThisKey="IdCategory", OtherKey="Id", IsForeignKey=true)]
		public EntityDanhMuc EntityDanhMuc
		{
			get
			{
				return this._EntityDanhMuc.Entity;
			}
			set
			{
				EntityDanhMuc previousValue = this._EntityDanhMuc.Entity;
				if (((previousValue != value) 
							|| (this._EntityDanhMuc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityDanhMuc.Entity = null;
						previousValue.EntityTrends.Remove(this);
					}
					this._EntityDanhMuc.Entity = value;
					if ((value != null))
					{
						value.EntityTrends.Add(this);
						this._IdCategory = value.Id;
					}
					else
					{
						this._IdCategory = default(Nullable<int>);
					}
					this.SendPropertyChanged("EntityDanhMuc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntityBanner")]
	public partial class EntityBanner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _HinhAnh;
		
		private string _TieuDe;
		
		private string _NoiDung;
		
		private string _TenNut;
		
		private string _LinkNut;
		
		private System.Nullable<int> _ViTri;
		
		private LoaiBanner _LoaiBanner;
		
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(int value);
	partial void OnIdChanged();
	partial void OnHinhAnhChanging(string value);
	partial void OnHinhAnhChanged();
	partial void OnTieuDeChanging(string value);
	partial void OnTieuDeChanged();
	partial void OnNoiDungChanging(string value);
	partial void OnNoiDungChanged();
	partial void OnTenNutChanging(string value);
	partial void OnTenNutChanged();
	partial void OnLinkNutChanging(string value);
	partial void OnLinkNutChanged();
	partial void OnViTriChanging(System.Nullable<int> value);
	partial void OnViTriChanged();
	partial void OnLoaiBannerChanging(LoaiBanner value);
	partial void OnLoaiBannerChanged();
	#endregion
		
		public EntityBanner()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="NVarChar(350)")]
		public string HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TieuDe", DbType="NVarChar(550)")]
		public string TieuDe
		{
			get
			{
				return this._TieuDe;
			}
			set
			{
				if ((this._TieuDe != value))
				{
					this.OnTieuDeChanging(value);
					this.SendPropertyChanging();
					this._TieuDe = value;
					this.SendPropertyChanged("TieuDe");
					this.OnTieuDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(650)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNut", DbType="NVarChar(350)")]
		public string TenNut
		{
			get
			{
				return this._TenNut;
			}
			set
			{
				if ((this._TenNut != value))
				{
					this.OnTenNutChanging(value);
					this.SendPropertyChanging();
					this._TenNut = value;
					this.SendPropertyChanged("TenNut");
					this.OnTenNutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkNut", DbType="NVarChar(450)")]
		public string LinkNut
		{
			get
			{
				return this._LinkNut;
			}
			set
			{
				if ((this._LinkNut != value))
				{
					this.OnLinkNutChanging(value);
					this.SendPropertyChanging();
					this._LinkNut = value;
					this.SendPropertyChanged("LinkNut");
					this.OnLinkNutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViTri", DbType="Int")]
		public System.Nullable<int> ViTri
		{
			get
			{
				return this._ViTri;
			}
			set
			{
				if ((this._ViTri != value))
				{
					this.OnViTriChanging(value);
					this.SendPropertyChanging();
					this._ViTri = value;
					this.SendPropertyChanged("ViTri");
					this.OnViTriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiBanner", CanBeNull=false)]
		public LoaiBanner LoaiBanner
		{
			get
			{
				return this._LoaiBanner;
			}
			set
			{
				if ((this._LoaiBanner != value))
				{
					this.OnLoaiBannerChanging(value);
					this.SendPropertyChanging();
					this._LoaiBanner = value;
					this.SendPropertyChanged("LoaiBanner");
					this.OnLoaiBannerChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntityBaoCao")]
	public partial class EntityBaoCao : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _IdDuAn;
		
		private System.Nullable<int> _IdUser;
		
		private string _NoiDung;
		
		private string _Ten;
		
		private string _DienThoai;
		
		private string _Email;
		
		private EntityRef<EntityDuAn> _EntityDuAn;
		
		private EntityRef<EntityUser> _EntityUser;
		
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(int value);
	partial void OnIdChanged();
	partial void OnIdDuAnChanging(System.Nullable<int> value);
	partial void OnIdDuAnChanged();
	partial void OnIdUserChanging(System.Nullable<int> value);
	partial void OnIdUserChanged();
	partial void OnNoiDungChanging(string value);
	partial void OnNoiDungChanged();
	partial void OnTenChanging(string value);
	partial void OnTenChanged();
	partial void OnDienThoaiChanging(string value);
	partial void OnDienThoaiChanged();
	partial void OnEmailChanging(string value);
	partial void OnEmailChanged();
	#endregion
		
		public EntityBaoCao()
		{
			this._EntityDuAn = default(EntityRef<EntityDuAn>);
			this._EntityUser = default(EntityRef<EntityUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDuAn", DbType="Int")]
		public System.Nullable<int> IdDuAn
		{
			get
			{
				return this._IdDuAn;
			}
			set
			{
				if ((this._IdDuAn != value))
				{
					if ((this._EntityDuAn.HasLoadedOrAssignedValue || this._EntityUser.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDuAnChanging(value);
					this.SendPropertyChanging();
					this._IdDuAn = value;
					this.SendPropertyChanged("IdDuAn");
					this.OnIdDuAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUser", DbType="Int")]
		public System.Nullable<int> IdUser
		{
			get
			{
				return this._IdUser;
			}
			set
			{
				if ((this._IdUser != value))
				{
					this.OnIdUserChanging(value);
					this.SendPropertyChanging();
					this._IdUser = value;
					this.SendPropertyChanged("IdUser");
					this.OnIdUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(650)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(50)")]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoai", DbType="NVarChar(50)")]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDuAn_EntityBaoCao", Storage="_EntityDuAn", ThisKey="IdDuAn", OtherKey="Id", IsForeignKey=true)]
		public EntityDuAn EntityDuAn
		{
			get
			{
				return this._EntityDuAn.Entity;
			}
			set
			{
				EntityDuAn previousValue = this._EntityDuAn.Entity;
				if (((previousValue != value) 
							|| (this._EntityDuAn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityDuAn.Entity = null;
						previousValue.EntityBaoCaos.Remove(this);
					}
					this._EntityDuAn.Entity = value;
					if ((value != null))
					{
						value.EntityBaoCaos.Add(this);
						this._IdDuAn = value.Id;
					}
					else
					{
						this._IdDuAn = default(Nullable<int>);
					}
					this.SendPropertyChanged("EntityDuAn");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityUser_EntityBaoCao", Storage="_EntityUser", ThisKey="IdDuAn", OtherKey="Id", IsForeignKey=true)]
		public EntityUser EntityUser
		{
			get
			{
				return this._EntityUser.Entity;
			}
			set
			{
				EntityUser previousValue = this._EntityUser.Entity;
				if (((previousValue != value) 
							|| (this._EntityUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityUser.Entity = null;
						previousValue.EntityBaoCaos.Remove(this);
					}
					this._EntityUser.Entity = value;
					if ((value != null))
					{
						value.EntityBaoCaos.Add(this);
						this._IdDuAn = value.Id;
					}
					else
					{
						this._IdDuAn = default(Nullable<int>);
					}
					this.SendPropertyChanged("EntityUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntityBinhLuan")]
	public partial class EntityBinhLuan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _IdUser;
		
		private System.Nullable<int> _IdDuAn;
		
		private string _NoiDung;
		
		private System.Nullable<System.DateTime> _ThoiGian;
		
		private System.Nullable<int> _Public;
		
		private EntityRef<EntityDuAn> _EntityDuAn;
		
		private EntityRef<EntityUser> _EntityUser;
		
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(int value);
	partial void OnIdChanged();
	partial void OnIdUserChanging(System.Nullable<int> value);
	partial void OnIdUserChanged();
	partial void OnIdDuAnChanging(System.Nullable<int> value);
	partial void OnIdDuAnChanged();
	partial void OnNoiDungChanging(string value);
	partial void OnNoiDungChanged();
	partial void OnThoiGianChanging(System.Nullable<System.DateTime> value);
	partial void OnThoiGianChanged();
	partial void OnPublicChanging(System.Nullable<int> value);
	partial void OnPublicChanged();
	#endregion
		
		public EntityBinhLuan()
		{
			this._EntityDuAn = default(EntityRef<EntityDuAn>);
			this._EntityUser = default(EntityRef<EntityUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUser", DbType="Int")]
		public System.Nullable<int> IdUser
		{
			get
			{
				return this._IdUser;
			}
			set
			{
				if ((this._IdUser != value))
				{
					if (this._EntityUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUserChanging(value);
					this.SendPropertyChanging();
					this._IdUser = value;
					this.SendPropertyChanged("IdUser");
					this.OnIdUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDuAn", DbType="Int")]
		public System.Nullable<int> IdDuAn
		{
			get
			{
				return this._IdDuAn;
			}
			set
			{
				if ((this._IdDuAn != value))
				{
					if (this._EntityDuAn.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDuAnChanging(value);
					this.SendPropertyChanging();
					this._IdDuAn = value;
					this.SendPropertyChanged("IdDuAn");
					this.OnIdDuAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(2050)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGian", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGian
		{
			get
			{
				return this._ThoiGian;
			}
			set
			{
				if ((this._ThoiGian != value))
				{
					this.OnThoiGianChanging(value);
					this.SendPropertyChanging();
					this._ThoiGian = value;
					this.SendPropertyChanged("ThoiGian");
					this.OnThoiGianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Public]", Storage="_Public", DbType="Int")]
		public System.Nullable<int> Public
		{
			get
			{
				return this._Public;
			}
			set
			{
				if ((this._Public != value))
				{
					this.OnPublicChanging(value);
					this.SendPropertyChanging();
					this._Public = value;
					this.SendPropertyChanged("Public");
					this.OnPublicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDuAn_EntityBinhLuan", Storage="_EntityDuAn", ThisKey="IdDuAn", OtherKey="Id", IsForeignKey=true)]
		public EntityDuAn EntityDuAn
		{
			get
			{
				return this._EntityDuAn.Entity;
			}
			set
			{
				EntityDuAn previousValue = this._EntityDuAn.Entity;
				if (((previousValue != value) 
							|| (this._EntityDuAn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityDuAn.Entity = null;
						previousValue.EntityBinhLuans.Remove(this);
					}
					this._EntityDuAn.Entity = value;
					if ((value != null))
					{
						value.EntityBinhLuans.Add(this);
						this._IdDuAn = value.Id;
					}
					else
					{
						this._IdDuAn = default(Nullable<int>);
					}
					this.SendPropertyChanged("EntityDuAn");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityUser_EntityBinhLuan", Storage="_EntityUser", ThisKey="IdUser", OtherKey="Id", IsForeignKey=true)]
		public EntityUser EntityUser
		{
			get
			{
				return this._EntityUser.Entity;
			}
			set
			{
				EntityUser previousValue = this._EntityUser.Entity;
				if (((previousValue != value) 
							|| (this._EntityUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityUser.Entity = null;
						previousValue.EntityBinhLuans.Remove(this);
					}
					this._EntityUser.Entity = value;
					if ((value != null))
					{
						value.EntityBinhLuans.Add(this);
						this._IdUser = value.Id;
					}
					else
					{
						this._IdUser = default(Nullable<int>);
					}
					this.SendPropertyChanged("EntityUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntityDanhMuc")]
	public partial class EntityDanhMuc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TenDM;
		
		private System.Nullable<int> _IdRoot;
		
		private System.Nullable<int> _HienThi;
		
		private EntitySet<EntityTrend> _EntityTrends;
		
		private EntitySet<EntityDanhMuc> _EntityDanhMucs;
		
		private EntitySet<EntityChiTietDanhMuc> _EntityChiTietDanhMucs;
		
		private EntitySet<EntityDuAnFeature> _EntityDuAnFeatures;
		
		private EntitySet<EntityDuAnTag> _EntityDuAnTags;
		
		private EntitySet<EntityHomePage> _EntityHomePages;
		
		private EntitySet<EntityHomePage> _EntityHomePages1;
		
		private EntitySet<EntityHomePage> _EntityHomePages2;
		
		private EntitySet<EntityThongTinDuAn> _EntityThongTinDuAns;
		
		private EntityRef<EntityDanhMuc> _EntityDanhMuc1;
		
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(int value);
	partial void OnIdChanged();
	partial void OnTenDMChanging(string value);
	partial void OnTenDMChanged();
	partial void OnIdRootChanging(System.Nullable<int> value);
	partial void OnIdRootChanged();
	partial void OnHienThiChanging(System.Nullable<int> value);
	partial void OnHienThiChanged();
	#endregion
		
		public EntityDanhMuc()
		{
			this._EntityTrends = new EntitySet<EntityTrend>(new Action<EntityTrend>(this.attach_EntityTrends), new Action<EntityTrend>(this.detach_EntityTrends));
			this._EntityDanhMucs = new EntitySet<EntityDanhMuc>(new Action<EntityDanhMuc>(this.attach_EntityDanhMucs), new Action<EntityDanhMuc>(this.detach_EntityDanhMucs));
			this._EntityChiTietDanhMucs = new EntitySet<EntityChiTietDanhMuc>(new Action<EntityChiTietDanhMuc>(this.attach_EntityChiTietDanhMucs), new Action<EntityChiTietDanhMuc>(this.detach_EntityChiTietDanhMucs));
			this._EntityDuAnFeatures = new EntitySet<EntityDuAnFeature>(new Action<EntityDuAnFeature>(this.attach_EntityDuAnFeatures), new Action<EntityDuAnFeature>(this.detach_EntityDuAnFeatures));
			this._EntityDuAnTags = new EntitySet<EntityDuAnTag>(new Action<EntityDuAnTag>(this.attach_EntityDuAnTags), new Action<EntityDuAnTag>(this.detach_EntityDuAnTags));
			this._EntityHomePages = new EntitySet<EntityHomePage>(new Action<EntityHomePage>(this.attach_EntityHomePages), new Action<EntityHomePage>(this.detach_EntityHomePages));
			this._EntityHomePages1 = new EntitySet<EntityHomePage>(new Action<EntityHomePage>(this.attach_EntityHomePages1), new Action<EntityHomePage>(this.detach_EntityHomePages1));
			this._EntityHomePages2 = new EntitySet<EntityHomePage>(new Action<EntityHomePage>(this.attach_EntityHomePages2), new Action<EntityHomePage>(this.detach_EntityHomePages2));
			this._EntityThongTinDuAns = new EntitySet<EntityThongTinDuAn>(new Action<EntityThongTinDuAn>(this.attach_EntityThongTinDuAns), new Action<EntityThongTinDuAn>(this.detach_EntityThongTinDuAns));
			this._EntityDanhMuc1 = default(EntityRef<EntityDanhMuc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDM", DbType="NVarChar(150)")]
		public string TenDM
		{
			get
			{
				return this._TenDM;
			}
			set
			{
				if ((this._TenDM != value))
				{
					this.OnTenDMChanging(value);
					this.SendPropertyChanging();
					this._TenDM = value;
					this.SendPropertyChanged("TenDM");
					this.OnTenDMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdRoot", DbType="Int")]
		public System.Nullable<int> IdRoot
		{
			get
			{
				return this._IdRoot;
			}
			set
			{
				if ((this._IdRoot != value))
				{
					if (this._EntityDanhMuc1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdRootChanging(value);
					this.SendPropertyChanging();
					this._IdRoot = value;
					this.SendPropertyChanged("IdRoot");
					this.OnIdRootChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HienThi", DbType="Int")]
		public System.Nullable<int> HienThi
		{
			get
			{
				return this._HienThi;
			}
			set
			{
				if ((this._HienThi != value))
				{
					this.OnHienThiChanging(value);
					this.SendPropertyChanging();
					this._HienThi = value;
					this.SendPropertyChanged("HienThi");
					this.OnHienThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDanhMuc_EntityTrend", Storage="_EntityTrends", ThisKey="Id", OtherKey="IdCategory")]
		public EntitySet<EntityTrend> EntityTrends
		{
			get
			{
				return this._EntityTrends;
			}
			set
			{
				this._EntityTrends.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDanhMuc_EntityDanhMuc", Storage="_EntityDanhMucs", ThisKey="Id", OtherKey="IdRoot")]
		public EntitySet<EntityDanhMuc> EntityDanhMucs
		{
			get
			{
				return this._EntityDanhMucs;
			}
			set
			{
				this._EntityDanhMucs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDanhMuc_EntityChiTietDanhMuc", Storage="_EntityChiTietDanhMucs", ThisKey="Id", OtherKey="IdDanhMuc")]
		public EntitySet<EntityChiTietDanhMuc> EntityChiTietDanhMucs
		{
			get
			{
				return this._EntityChiTietDanhMucs;
			}
			set
			{
				this._EntityChiTietDanhMucs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDanhMuc_EntityDuAnFeature", Storage="_EntityDuAnFeatures", ThisKey="Id", OtherKey="IdFeature")]
		public EntitySet<EntityDuAnFeature> EntityDuAnFeatures
		{
			get
			{
				return this._EntityDuAnFeatures;
			}
			set
			{
				this._EntityDuAnFeatures.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDanhMuc_EntityDuAnTag", Storage="_EntityDuAnTags", ThisKey="Id", OtherKey="IdTag")]
		public EntitySet<EntityDuAnTag> EntityDuAnTags
		{
			get
			{
				return this._EntityDuAnTags;
			}
			set
			{
				this._EntityDuAnTags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDanhMuc_EntityHomePage", Storage="_EntityHomePages", ThisKey="Id", OtherKey="IdModuleDanhMuc1")]
		public EntitySet<EntityHomePage> EntityHomePages
		{
			get
			{
				return this._EntityHomePages;
			}
			set
			{
				this._EntityHomePages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDanhMuc_EntityHomePage1", Storage="_EntityHomePages1", ThisKey="Id", OtherKey="IdModuleDanhMuc2")]
		public EntitySet<EntityHomePage> EntityHomePages1
		{
			get
			{
				return this._EntityHomePages1;
			}
			set
			{
				this._EntityHomePages1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDanhMuc_EntityHomePage2", Storage="_EntityHomePages2", ThisKey="Id", OtherKey="IdModuleDanhMuc3")]
		public EntitySet<EntityHomePage> EntityHomePages2
		{
			get
			{
				return this._EntityHomePages2;
			}
			set
			{
				this._EntityHomePages2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDanhMuc_EntityThongTinDuAn", Storage="_EntityThongTinDuAns", ThisKey="Id", OtherKey="IdDanhMuc")]
		public EntitySet<EntityThongTinDuAn> EntityThongTinDuAns
		{
			get
			{
				return this._EntityThongTinDuAns;
			}
			set
			{
				this._EntityThongTinDuAns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDanhMuc_EntityDanhMuc", Storage="_EntityDanhMuc1", ThisKey="IdRoot", OtherKey="Id", IsForeignKey=true)]
		public EntityDanhMuc EntityDanhMuc1
		{
			get
			{
				return this._EntityDanhMuc1.Entity;
			}
			set
			{
				EntityDanhMuc previousValue = this._EntityDanhMuc1.Entity;
				if (((previousValue != value) 
							|| (this._EntityDanhMuc1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityDanhMuc1.Entity = null;
						previousValue.EntityDanhMucs.Remove(this);
					}
					this._EntityDanhMuc1.Entity = value;
					if ((value != null))
					{
						value.EntityDanhMucs.Add(this);
						this._IdRoot = value.Id;
					}
					else
					{
						this._IdRoot = default(Nullable<int>);
					}
					this.SendPropertyChanged("EntityDanhMuc1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EntityTrends(EntityTrend entity)
		{
			this.SendPropertyChanging();
			entity.EntityDanhMuc = this;
		}
		
		private void detach_EntityTrends(EntityTrend entity)
		{
			this.SendPropertyChanging();
			entity.EntityDanhMuc = null;
		}
		
		private void attach_EntityDanhMucs(EntityDanhMuc entity)
		{
			this.SendPropertyChanging();
			entity.EntityDanhMuc1 = this;
		}
		
		private void detach_EntityDanhMucs(EntityDanhMuc entity)
		{
			this.SendPropertyChanging();
			entity.EntityDanhMuc1 = null;
		}
		
		private void attach_EntityChiTietDanhMucs(EntityChiTietDanhMuc entity)
		{
			this.SendPropertyChanging();
			entity.EntityDanhMuc = this;
		}
		
		private void detach_EntityChiTietDanhMucs(EntityChiTietDanhMuc entity)
		{
			this.SendPropertyChanging();
			entity.EntityDanhMuc = null;
		}
		
		private void attach_EntityDuAnFeatures(EntityDuAnFeature entity)
		{
			this.SendPropertyChanging();
			entity.EntityDanhMuc = this;
		}
		
		private void detach_EntityDuAnFeatures(EntityDuAnFeature entity)
		{
			this.SendPropertyChanging();
			entity.EntityDanhMuc = null;
		}
		
		private void attach_EntityDuAnTags(EntityDuAnTag entity)
		{
			this.SendPropertyChanging();
			entity.EntityDanhMuc = this;
		}
		
		private void detach_EntityDuAnTags(EntityDuAnTag entity)
		{
			this.SendPropertyChanging();
			entity.EntityDanhMuc = null;
		}
		
		private void attach_EntityHomePages(EntityHomePage entity)
		{
			this.SendPropertyChanging();
			entity.EntityDanhMuc = this;
		}
		
		private void detach_EntityHomePages(EntityHomePage entity)
		{
			this.SendPropertyChanging();
			entity.EntityDanhMuc = null;
		}
		
		private void attach_EntityHomePages1(EntityHomePage entity)
		{
			this.SendPropertyChanging();
			entity.EntityDanhMuc1 = this;
		}
		
		private void detach_EntityHomePages1(EntityHomePage entity)
		{
			this.SendPropertyChanging();
			entity.EntityDanhMuc1 = null;
		}
		
		private void attach_EntityHomePages2(EntityHomePage entity)
		{
			this.SendPropertyChanging();
			entity.EntityDanhMuc2 = this;
		}
		
		private void detach_EntityHomePages2(EntityHomePage entity)
		{
			this.SendPropertyChanging();
			entity.EntityDanhMuc2 = null;
		}
		
		private void attach_EntityThongTinDuAns(EntityThongTinDuAn entity)
		{
			this.SendPropertyChanging();
			entity.EntityDanhMuc = this;
		}
		
		private void detach_EntityThongTinDuAns(EntityThongTinDuAn entity)
		{
			this.SendPropertyChanging();
			entity.EntityDanhMuc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntityDuAn")]
	public partial class EntityDuAn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TenDuAn;
		
		private System.Nullable<int> _IdUser;
		
		private System.Nullable<int> _TrangThai;
		
		private System.Nullable<int> _TrangThaiFund;
		
		private string _LyDoBlock;
		
		private System.Nullable<int> _TienDauTuMucTieu;
		
		private System.Nullable<int> _TienDauTuHienTai;
		
		private System.Nullable<int> _SoNguoiDaDauTu;
		
		private System.Nullable<System.DateTime> _ThoiGianBatDau;
		
		private System.Nullable<System.DateTime> _ThoiGianKetThuc;
		
		private string _DiaDiem;
		
		private string _ThongTinNgan;
		
		private string _HinhAnh;
		
		private string _LinkVideo;
		
		private string _NoiDung;
		
		private string _RuiRo;
		
		private System.Nullable<int> _SoNgay;
		
		private System.Nullable<int> _IdDanhMuc;
		
		private System.Nullable<int> _DuAnDuocChon;
		
		private System.Nullable<int> _Chon1;
		
		private System.Nullable<int> _Chon2;
		
		private System.Nullable<int> _Chon3;
		
		private System.Nullable<int> _SoLuotView;
		
		private string _ThongTinWhichPerson;
		
		private System.Nullable<int> _IdThongTinTaiKhoan;
		
		private string _Flag;
		
		private System.Nullable<int> _LoaiHinhGoiVon;
		
		private System.Nullable<System.DateTime> _ThoigianSummit;
		
		private EntitySet<EntityBaoCao> _EntityBaoCaos;
		
		private EntitySet<EntityBinhLuan> _EntityBinhLuans;
		
		private EntitySet<EntityHoatDong> _EntityHoatDongs;
		
		private EntitySet<EntityPhanThuong> _EntityPhanThuongs;
		
		private EntitySet<EntityCapNhatDuAn> _EntityCapNhatDuAns;
		
		private EntitySet<EntityChiTietDanhMuc> _EntityChiTietDanhMucs;
		
		private EntitySet<EntityChiTietDuAn> _EntityChiTietDuAns;
		
		private EntitySet<EntityDauTu> _EntityDauTus;
		
		private EntitySet<EntityDuAnFeature> _EntityDuAnFeatures;
		
		private EntitySet<EntityDuAnTag> _EntityDuAnTags;
		
		private EntitySet<EntityNhomChienDich> _EntityNhomChienDiches;
		
		private EntitySet<EntityNoiDungLink> _EntityNoiDungLinks;
		
		private EntitySet<EntityTheoDoiDuAn> _EntityTheoDoiDuAns;
		
		private EntitySet<EntityThongTinDuAn> _EntityThongTinDuAns;
		
		private EntityRef<EntityUser> _EntityUser;
		
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(int value);
	partial void OnIdChanged();
	partial void OnTenDuAnChanging(string value);
	partial void OnTenDuAnChanged();
	partial void OnIdUserChanging(System.Nullable<int> value);
	partial void OnIdUserChanged();
	partial void OnTrangThaiChanging(System.Nullable<int> value);
	partial void OnTrangThaiChanged();
	partial void OnTrangThaiFundChanging(System.Nullable<int> value);
	partial void OnTrangThaiFundChanged();
	partial void OnLyDoBlockChanging(string value);
	partial void OnLyDoBlockChanged();
	partial void OnTienDauTuMucTieuChanging(System.Nullable<int> value);
	partial void OnTienDauTuMucTieuChanged();
	partial void OnTienDauTuHienTaiChanging(System.Nullable<int> value);
	partial void OnTienDauTuHienTaiChanged();
	partial void OnSoNguoiDaDauTuChanging(System.Nullable<int> value);
	partial void OnSoNguoiDaDauTuChanged();
	partial void OnThoiGianBatDauChanging(System.Nullable<System.DateTime> value);
	partial void OnThoiGianBatDauChanged();
	partial void OnThoiGianKetThucChanging(System.Nullable<System.DateTime> value);
	partial void OnThoiGianKetThucChanged();
	partial void OnDiaDiemChanging(string value);
	partial void OnDiaDiemChanged();
	partial void OnThongTinNganChanging(string value);
	partial void OnThongTinNganChanged();
	partial void OnHinhAnhChanging(string value);
	partial void OnHinhAnhChanged();
	partial void OnLinkVideoChanging(string value);
	partial void OnLinkVideoChanged();
	partial void OnNoiDungChanging(string value);
	partial void OnNoiDungChanged();
	partial void OnRuiRoChanging(string value);
	partial void OnRuiRoChanged();
	partial void OnSoNgayChanging(System.Nullable<int> value);
	partial void OnSoNgayChanged();
	partial void OnIdDanhMucChanging(System.Nullable<int> value);
	partial void OnIdDanhMucChanged();
	partial void OnDuAnDuocChonChanging(System.Nullable<int> value);
	partial void OnDuAnDuocChonChanged();
	partial void OnChon1Changing(System.Nullable<int> value);
	partial void OnChon1Changed();
	partial void OnChon2Changing(System.Nullable<int> value);
	partial void OnChon2Changed();
	partial void OnChon3Changing(System.Nullable<int> value);
	partial void OnChon3Changed();
	partial void OnSoLuotViewChanging(System.Nullable<int> value);
	partial void OnSoLuotViewChanged();
	partial void OnThongTinWhichPersonChanging(string value);
	partial void OnThongTinWhichPersonChanged();
	partial void OnIdThongTinTaiKhoanChanging(System.Nullable<int> value);
	partial void OnIdThongTinTaiKhoanChanged();
	partial void OnFlagChanging(string value);
	partial void OnFlagChanged();
	partial void OnLoaiHinhGoiVonChanging(System.Nullable<int> value);
	partial void OnLoaiHinhGoiVonChanged();
	partial void OnThoigianSummitChanging(System.Nullable<System.DateTime> value);
	partial void OnThoigianSummitChanged();
	#endregion
		
		public EntityDuAn()
		{
			this._EntityBaoCaos = new EntitySet<EntityBaoCao>(new Action<EntityBaoCao>(this.attach_EntityBaoCaos), new Action<EntityBaoCao>(this.detach_EntityBaoCaos));
			this._EntityBinhLuans = new EntitySet<EntityBinhLuan>(new Action<EntityBinhLuan>(this.attach_EntityBinhLuans), new Action<EntityBinhLuan>(this.detach_EntityBinhLuans));
			this._EntityHoatDongs = new EntitySet<EntityHoatDong>(new Action<EntityHoatDong>(this.attach_EntityHoatDongs), new Action<EntityHoatDong>(this.detach_EntityHoatDongs));
			this._EntityPhanThuongs = new EntitySet<EntityPhanThuong>(new Action<EntityPhanThuong>(this.attach_EntityPhanThuongs), new Action<EntityPhanThuong>(this.detach_EntityPhanThuongs));
			this._EntityCapNhatDuAns = new EntitySet<EntityCapNhatDuAn>(new Action<EntityCapNhatDuAn>(this.attach_EntityCapNhatDuAns), new Action<EntityCapNhatDuAn>(this.detach_EntityCapNhatDuAns));
			this._EntityChiTietDanhMucs = new EntitySet<EntityChiTietDanhMuc>(new Action<EntityChiTietDanhMuc>(this.attach_EntityChiTietDanhMucs), new Action<EntityChiTietDanhMuc>(this.detach_EntityChiTietDanhMucs));
			this._EntityChiTietDuAns = new EntitySet<EntityChiTietDuAn>(new Action<EntityChiTietDuAn>(this.attach_EntityChiTietDuAns), new Action<EntityChiTietDuAn>(this.detach_EntityChiTietDuAns));
			this._EntityDauTus = new EntitySet<EntityDauTu>(new Action<EntityDauTu>(this.attach_EntityDauTus), new Action<EntityDauTu>(this.detach_EntityDauTus));
			this._EntityDuAnFeatures = new EntitySet<EntityDuAnFeature>(new Action<EntityDuAnFeature>(this.attach_EntityDuAnFeatures), new Action<EntityDuAnFeature>(this.detach_EntityDuAnFeatures));
			this._EntityDuAnTags = new EntitySet<EntityDuAnTag>(new Action<EntityDuAnTag>(this.attach_EntityDuAnTags), new Action<EntityDuAnTag>(this.detach_EntityDuAnTags));
			this._EntityNhomChienDiches = new EntitySet<EntityNhomChienDich>(new Action<EntityNhomChienDich>(this.attach_EntityNhomChienDiches), new Action<EntityNhomChienDich>(this.detach_EntityNhomChienDiches));
			this._EntityNoiDungLinks = new EntitySet<EntityNoiDungLink>(new Action<EntityNoiDungLink>(this.attach_EntityNoiDungLinks), new Action<EntityNoiDungLink>(this.detach_EntityNoiDungLinks));
			this._EntityTheoDoiDuAns = new EntitySet<EntityTheoDoiDuAn>(new Action<EntityTheoDoiDuAn>(this.attach_EntityTheoDoiDuAns), new Action<EntityTheoDoiDuAn>(this.detach_EntityTheoDoiDuAns));
			this._EntityThongTinDuAns = new EntitySet<EntityThongTinDuAn>(new Action<EntityThongTinDuAn>(this.attach_EntityThongTinDuAns), new Action<EntityThongTinDuAn>(this.detach_EntityThongTinDuAns));
			this._EntityUser = default(EntityRef<EntityUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDuAn", DbType="NVarChar(550)")]
		public string TenDuAn
		{
			get
			{
				return this._TenDuAn;
			}
			set
			{
				if ((this._TenDuAn != value))
				{
					this.OnTenDuAnChanging(value);
					this.SendPropertyChanging();
					this._TenDuAn = value;
					this.SendPropertyChanged("TenDuAn");
					this.OnTenDuAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUser", DbType="Int")]
		public System.Nullable<int> IdUser
		{
			get
			{
				return this._IdUser;
			}
			set
			{
				if ((this._IdUser != value))
				{
					if (this._EntityUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUserChanging(value);
					this.SendPropertyChanging();
					this._IdUser = value;
					this.SendPropertyChanged("IdUser");
					this.OnIdUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Int")]
		public System.Nullable<int> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThaiFund", DbType="Int")]
		public System.Nullable<int> TrangThaiFund
		{
			get
			{
				return this._TrangThaiFund;
			}
			set
			{
				if ((this._TrangThaiFund != value))
				{
					this.OnTrangThaiFundChanging(value);
					this.SendPropertyChanging();
					this._TrangThaiFund = value;
					this.SendPropertyChanged("TrangThaiFund");
					this.OnTrangThaiFundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LyDoBlock", DbType="NVarChar(650)")]
		public string LyDoBlock
		{
			get
			{
				return this._LyDoBlock;
			}
			set
			{
				if ((this._LyDoBlock != value))
				{
					this.OnLyDoBlockChanging(value);
					this.SendPropertyChanging();
					this._LyDoBlock = value;
					this.SendPropertyChanged("LyDoBlock");
					this.OnLyDoBlockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TienDauTuMucTieu", DbType="Int")]
		public System.Nullable<int> TienDauTuMucTieu
		{
			get
			{
				return this._TienDauTuMucTieu;
			}
			set
			{
				if ((this._TienDauTuMucTieu != value))
				{
					this.OnTienDauTuMucTieuChanging(value);
					this.SendPropertyChanging();
					this._TienDauTuMucTieu = value;
					this.SendPropertyChanged("TienDauTuMucTieu");
					this.OnTienDauTuMucTieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TienDauTuHienTai", DbType="Int")]
		public System.Nullable<int> TienDauTuHienTai
		{
			get
			{
				return this._TienDauTuHienTai;
			}
			set
			{
				if ((this._TienDauTuHienTai != value))
				{
					this.OnTienDauTuHienTaiChanging(value);
					this.SendPropertyChanging();
					this._TienDauTuHienTai = value;
					this.SendPropertyChanged("TienDauTuHienTai");
					this.OnTienDauTuHienTaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoNguoiDaDauTu", DbType="Int")]
		public System.Nullable<int> SoNguoiDaDauTu
		{
			get
			{
				return this._SoNguoiDaDauTu;
			}
			set
			{
				if ((this._SoNguoiDaDauTu != value))
				{
					this.OnSoNguoiDaDauTuChanging(value);
					this.SendPropertyChanging();
					this._SoNguoiDaDauTu = value;
					this.SendPropertyChanged("SoNguoiDaDauTu");
					this.OnSoNguoiDaDauTuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianBatDau", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGianBatDau
		{
			get
			{
				return this._ThoiGianBatDau;
			}
			set
			{
				if ((this._ThoiGianBatDau != value))
				{
					this.OnThoiGianBatDauChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianBatDau = value;
					this.SendPropertyChanged("ThoiGianBatDau");
					this.OnThoiGianBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianKetThuc", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGianKetThuc
		{
			get
			{
				return this._ThoiGianKetThuc;
			}
			set
			{
				if ((this._ThoiGianKetThuc != value))
				{
					this.OnThoiGianKetThucChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianKetThuc = value;
					this.SendPropertyChanged("ThoiGianKetThuc");
					this.OnThoiGianKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaDiem", DbType="NVarChar(150)")]
		public string DiaDiem
		{
			get
			{
				return this._DiaDiem;
			}
			set
			{
				if ((this._DiaDiem != value))
				{
					this.OnDiaDiemChanging(value);
					this.SendPropertyChanging();
					this._DiaDiem = value;
					this.SendPropertyChanged("DiaDiem");
					this.OnDiaDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThongTinNgan", DbType="NVarChar(500)")]
		public string ThongTinNgan
		{
			get
			{
				return this._ThongTinNgan;
			}
			set
			{
				if ((this._ThongTinNgan != value))
				{
					this.OnThongTinNganChanging(value);
					this.SendPropertyChanging();
					this._ThongTinNgan = value;
					this.SendPropertyChanged("ThongTinNgan");
					this.OnThongTinNganChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="NVarChar(300)")]
		public string HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkVideo", DbType="NVarChar(450)")]
		public string LinkVideo
		{
			get
			{
				return this._LinkVideo;
			}
			set
			{
				if ((this._LinkVideo != value))
				{
					this.OnLinkVideoChanging(value);
					this.SendPropertyChanging();
					this._LinkVideo = value;
					this.SendPropertyChanged("LinkVideo");
					this.OnLinkVideoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RuiRo", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string RuiRo
		{
			get
			{
				return this._RuiRo;
			}
			set
			{
				if ((this._RuiRo != value))
				{
					this.OnRuiRoChanging(value);
					this.SendPropertyChanging();
					this._RuiRo = value;
					this.SendPropertyChanged("RuiRo");
					this.OnRuiRoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoNgay", DbType="Int")]
		public System.Nullable<int> SoNgay
		{
			get
			{
				return this._SoNgay;
			}
			set
			{
				if ((this._SoNgay != value))
				{
					this.OnSoNgayChanging(value);
					this.SendPropertyChanging();
					this._SoNgay = value;
					this.SendPropertyChanged("SoNgay");
					this.OnSoNgayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDanhMuc", DbType="Int")]
		public System.Nullable<int> IdDanhMuc
		{
			get
			{
				return this._IdDanhMuc;
			}
			set
			{
				if ((this._IdDanhMuc != value))
				{
					this.OnIdDanhMucChanging(value);
					this.SendPropertyChanging();
					this._IdDanhMuc = value;
					this.SendPropertyChanged("IdDanhMuc");
					this.OnIdDanhMucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DuAnDuocChon", DbType="Int")]
		public System.Nullable<int> DuAnDuocChon
		{
			get
			{
				return this._DuAnDuocChon;
			}
			set
			{
				if ((this._DuAnDuocChon != value))
				{
					this.OnDuAnDuocChonChanging(value);
					this.SendPropertyChanging();
					this._DuAnDuocChon = value;
					this.SendPropertyChanged("DuAnDuocChon");
					this.OnDuAnDuocChonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chon1", DbType="Int")]
		public System.Nullable<int> Chon1
		{
			get
			{
				return this._Chon1;
			}
			set
			{
				if ((this._Chon1 != value))
				{
					this.OnChon1Changing(value);
					this.SendPropertyChanging();
					this._Chon1 = value;
					this.SendPropertyChanged("Chon1");
					this.OnChon1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chon2", DbType="Int")]
		public System.Nullable<int> Chon2
		{
			get
			{
				return this._Chon2;
			}
			set
			{
				if ((this._Chon2 != value))
				{
					this.OnChon2Changing(value);
					this.SendPropertyChanging();
					this._Chon2 = value;
					this.SendPropertyChanged("Chon2");
					this.OnChon2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chon3", DbType="Int")]
		public System.Nullable<int> Chon3
		{
			get
			{
				return this._Chon3;
			}
			set
			{
				if ((this._Chon3 != value))
				{
					this.OnChon3Changing(value);
					this.SendPropertyChanging();
					this._Chon3 = value;
					this.SendPropertyChanged("Chon3");
					this.OnChon3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuotView", DbType="Int")]
		public System.Nullable<int> SoLuotView
		{
			get
			{
				return this._SoLuotView;
			}
			set
			{
				if ((this._SoLuotView != value))
				{
					this.OnSoLuotViewChanging(value);
					this.SendPropertyChanging();
					this._SoLuotView = value;
					this.SendPropertyChanged("SoLuotView");
					this.OnSoLuotViewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThongTinWhichPerson", DbType="NVarChar(100)")]
		public string ThongTinWhichPerson
		{
			get
			{
				return this._ThongTinWhichPerson;
			}
			set
			{
				if ((this._ThongTinWhichPerson != value))
				{
					this.OnThongTinWhichPersonChanging(value);
					this.SendPropertyChanging();
					this._ThongTinWhichPerson = value;
					this.SendPropertyChanged("ThongTinWhichPerson");
					this.OnThongTinWhichPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdThongTinTaiKhoan", DbType="Int")]
		public System.Nullable<int> IdThongTinTaiKhoan
		{
			get
			{
				return this._IdThongTinTaiKhoan;
			}
			set
			{
				if ((this._IdThongTinTaiKhoan != value))
				{
					this.OnIdThongTinTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._IdThongTinTaiKhoan = value;
					this.SendPropertyChanged("IdThongTinTaiKhoan");
					this.OnIdThongTinTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flag", DbType="NVarChar(50)")]
		public string Flag
		{
			get
			{
				return this._Flag;
			}
			set
			{
				if ((this._Flag != value))
				{
					this.OnFlagChanging(value);
					this.SendPropertyChanging();
					this._Flag = value;
					this.SendPropertyChanged("Flag");
					this.OnFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiHinhGoiVon", DbType="Int")]
		public System.Nullable<int> LoaiHinhGoiVon
		{
			get
			{
				return this._LoaiHinhGoiVon;
			}
			set
			{
				if ((this._LoaiHinhGoiVon != value))
				{
					this.OnLoaiHinhGoiVonChanging(value);
					this.SendPropertyChanging();
					this._LoaiHinhGoiVon = value;
					this.SendPropertyChanged("LoaiHinhGoiVon");
					this.OnLoaiHinhGoiVonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoigianSummit", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoigianSummit
		{
			get
			{
				return this._ThoigianSummit;
			}
			set
			{
				if ((this._ThoigianSummit != value))
				{
					this.OnThoigianSummitChanging(value);
					this.SendPropertyChanging();
					this._ThoigianSummit = value;
					this.SendPropertyChanged("ThoigianSummit");
					this.OnThoigianSummitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDuAn_EntityBaoCao", Storage="_EntityBaoCaos", ThisKey="Id", OtherKey="IdDuAn")]
		public EntitySet<EntityBaoCao> EntityBaoCaos
		{
			get
			{
				return this._EntityBaoCaos;
			}
			set
			{
				this._EntityBaoCaos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDuAn_EntityBinhLuan", Storage="_EntityBinhLuans", ThisKey="Id", OtherKey="IdDuAn")]
		public EntitySet<EntityBinhLuan> EntityBinhLuans
		{
			get
			{
				return this._EntityBinhLuans;
			}
			set
			{
				this._EntityBinhLuans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDuAn_EntityHoatDong", Storage="_EntityHoatDongs", ThisKey="Id", OtherKey="IdDuAn")]
		public EntitySet<EntityHoatDong> EntityHoatDongs
		{
			get
			{
				return this._EntityHoatDongs;
			}
			set
			{
				this._EntityHoatDongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDuAn_EntityPhanThuong", Storage="_EntityPhanThuongs", ThisKey="Id", OtherKey="IdDuAn")]
		public EntitySet<EntityPhanThuong> EntityPhanThuongs
		{
			get
			{
				return this._EntityPhanThuongs;
			}
			set
			{
				this._EntityPhanThuongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDuAn_EntityCapNhatDuAn", Storage="_EntityCapNhatDuAns", ThisKey="Id", OtherKey="IdDuAn")]
		public EntitySet<EntityCapNhatDuAn> EntityCapNhatDuAns
		{
			get
			{
				return this._EntityCapNhatDuAns;
			}
			set
			{
				this._EntityCapNhatDuAns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDuAn_EntityChiTietDanhMuc", Storage="_EntityChiTietDanhMucs", ThisKey="Id", OtherKey="IdDuAn")]
		public EntitySet<EntityChiTietDanhMuc> EntityChiTietDanhMucs
		{
			get
			{
				return this._EntityChiTietDanhMucs;
			}
			set
			{
				this._EntityChiTietDanhMucs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDuAn_EntityChiTietDuAn", Storage="_EntityChiTietDuAns", ThisKey="Id", OtherKey="IdDuAn")]
		public EntitySet<EntityChiTietDuAn> EntityChiTietDuAns
		{
			get
			{
				return this._EntityChiTietDuAns;
			}
			set
			{
				this._EntityChiTietDuAns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDuAn_EntityDauTu", Storage="_EntityDauTus", ThisKey="Id", OtherKey="IdDuAn")]
		public EntitySet<EntityDauTu> EntityDauTus
		{
			get
			{
				return this._EntityDauTus;
			}
			set
			{
				this._EntityDauTus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDuAn_EntityDuAnFeature", Storage="_EntityDuAnFeatures", ThisKey="Id", OtherKey="IdDuAn")]
		public EntitySet<EntityDuAnFeature> EntityDuAnFeatures
		{
			get
			{
				return this._EntityDuAnFeatures;
			}
			set
			{
				this._EntityDuAnFeatures.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDuAn_EntityDuAnTag", Storage="_EntityDuAnTags", ThisKey="Id", OtherKey="IdDuAn")]
		public EntitySet<EntityDuAnTag> EntityDuAnTags
		{
			get
			{
				return this._EntityDuAnTags;
			}
			set
			{
				this._EntityDuAnTags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDuAn_EntityNhomChienDich", Storage="_EntityNhomChienDiches", ThisKey="Id", OtherKey="IdDuAn")]
		public EntitySet<EntityNhomChienDich> EntityNhomChienDiches
		{
			get
			{
				return this._EntityNhomChienDiches;
			}
			set
			{
				this._EntityNhomChienDiches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDuAn_EntityNoiDungLink", Storage="_EntityNoiDungLinks", ThisKey="Id", OtherKey="IdDuAn")]
		public EntitySet<EntityNoiDungLink> EntityNoiDungLinks
		{
			get
			{
				return this._EntityNoiDungLinks;
			}
			set
			{
				this._EntityNoiDungLinks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDuAn_EntityTheoDoiDuAn", Storage="_EntityTheoDoiDuAns", ThisKey="Id", OtherKey="IdDuAn")]
		public EntitySet<EntityTheoDoiDuAn> EntityTheoDoiDuAns
		{
			get
			{
				return this._EntityTheoDoiDuAns;
			}
			set
			{
				this._EntityTheoDoiDuAns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDuAn_EntityThongTinDuAn", Storage="_EntityThongTinDuAns", ThisKey="Id", OtherKey="IdDuAn")]
		public EntitySet<EntityThongTinDuAn> EntityThongTinDuAns
		{
			get
			{
				return this._EntityThongTinDuAns;
			}
			set
			{
				this._EntityThongTinDuAns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityUser_EntityDuAn", Storage="_EntityUser", ThisKey="IdUser", OtherKey="Id", IsForeignKey=true)]
		public EntityUser EntityUser
		{
			get
			{
				return this._EntityUser.Entity;
			}
			set
			{
				EntityUser previousValue = this._EntityUser.Entity;
				if (((previousValue != value) 
							|| (this._EntityUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityUser.Entity = null;
						previousValue.EntityDuAns.Remove(this);
					}
					this._EntityUser.Entity = value;
					if ((value != null))
					{
						value.EntityDuAns.Add(this);
						this._IdUser = value.Id;
					}
					else
					{
						this._IdUser = default(Nullable<int>);
					}
					this.SendPropertyChanged("EntityUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EntityBaoCaos(EntityBaoCao entity)
		{
			this.SendPropertyChanging();
			entity.EntityDuAn = this;
		}
		
		private void detach_EntityBaoCaos(EntityBaoCao entity)
		{
			this.SendPropertyChanging();
			entity.EntityDuAn = null;
		}
		
		private void attach_EntityBinhLuans(EntityBinhLuan entity)
		{
			this.SendPropertyChanging();
			entity.EntityDuAn = this;
		}
		
		private void detach_EntityBinhLuans(EntityBinhLuan entity)
		{
			this.SendPropertyChanging();
			entity.EntityDuAn = null;
		}
		
		private void attach_EntityHoatDongs(EntityHoatDong entity)
		{
			this.SendPropertyChanging();
			entity.EntityDuAn = this;
		}
		
		private void detach_EntityHoatDongs(EntityHoatDong entity)
		{
			this.SendPropertyChanging();
			entity.EntityDuAn = null;
		}
		
		private void attach_EntityPhanThuongs(EntityPhanThuong entity)
		{
			this.SendPropertyChanging();
			entity.EntityDuAn = this;
		}
		
		private void detach_EntityPhanThuongs(EntityPhanThuong entity)
		{
			this.SendPropertyChanging();
			entity.EntityDuAn = null;
		}
		
		private void attach_EntityCapNhatDuAns(EntityCapNhatDuAn entity)
		{
			this.SendPropertyChanging();
			entity.EntityDuAn = this;
		}
		
		private void detach_EntityCapNhatDuAns(EntityCapNhatDuAn entity)
		{
			this.SendPropertyChanging();
			entity.EntityDuAn = null;
		}
		
		private void attach_EntityChiTietDanhMucs(EntityChiTietDanhMuc entity)
		{
			this.SendPropertyChanging();
			entity.EntityDuAn = this;
		}
		
		private void detach_EntityChiTietDanhMucs(EntityChiTietDanhMuc entity)
		{
			this.SendPropertyChanging();
			entity.EntityDuAn = null;
		}
		
		private void attach_EntityChiTietDuAns(EntityChiTietDuAn entity)
		{
			this.SendPropertyChanging();
			entity.EntityDuAn = this;
		}
		
		private void detach_EntityChiTietDuAns(EntityChiTietDuAn entity)
		{
			this.SendPropertyChanging();
			entity.EntityDuAn = null;
		}
		
		private void attach_EntityDauTus(EntityDauTu entity)
		{
			this.SendPropertyChanging();
			entity.EntityDuAn = this;
		}
		
		private void detach_EntityDauTus(EntityDauTu entity)
		{
			this.SendPropertyChanging();
			entity.EntityDuAn = null;
		}
		
		private void attach_EntityDuAnFeatures(EntityDuAnFeature entity)
		{
			this.SendPropertyChanging();
			entity.EntityDuAn = this;
		}
		
		private void detach_EntityDuAnFeatures(EntityDuAnFeature entity)
		{
			this.SendPropertyChanging();
			entity.EntityDuAn = null;
		}
		
		private void attach_EntityDuAnTags(EntityDuAnTag entity)
		{
			this.SendPropertyChanging();
			entity.EntityDuAn = this;
		}
		
		private void detach_EntityDuAnTags(EntityDuAnTag entity)
		{
			this.SendPropertyChanging();
			entity.EntityDuAn = null;
		}
		
		private void attach_EntityNhomChienDiches(EntityNhomChienDich entity)
		{
			this.SendPropertyChanging();
			entity.EntityDuAn = this;
		}
		
		private void detach_EntityNhomChienDiches(EntityNhomChienDich entity)
		{
			this.SendPropertyChanging();
			entity.EntityDuAn = null;
		}
		
		private void attach_EntityNoiDungLinks(EntityNoiDungLink entity)
		{
			this.SendPropertyChanging();
			entity.EntityDuAn = this;
		}
		
		private void detach_EntityNoiDungLinks(EntityNoiDungLink entity)
		{
			this.SendPropertyChanging();
			entity.EntityDuAn = null;
		}
		
		private void attach_EntityTheoDoiDuAns(EntityTheoDoiDuAn entity)
		{
			this.SendPropertyChanging();
			entity.EntityDuAn = this;
		}
		
		private void detach_EntityTheoDoiDuAns(EntityTheoDoiDuAn entity)
		{
			this.SendPropertyChanging();
			entity.EntityDuAn = null;
		}
		
		private void attach_EntityThongTinDuAns(EntityThongTinDuAn entity)
		{
			this.SendPropertyChanging();
			entity.EntityDuAn = this;
		}
		
		private void detach_EntityThongTinDuAns(EntityThongTinDuAn entity)
		{
			this.SendPropertyChanging();
			entity.EntityDuAn = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntityHoatDong")]
	public partial class EntityHoatDong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdUser;
		
		private int _IdBanBe;
		
		private int _Loai;
		
		private System.DateTime _Date;
		
		private int _IdDuAn;
		
		private EntityRef<EntityDuAn> _EntityDuAn;
		
		private EntityRef<EntityUser> _EntityUser;
		
		private EntityRef<EntityUser> _EntityUser1;
		
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdUserChanging(int value);
	partial void OnIdUserChanged();
	partial void OnIdBanBeChanging(int value);
	partial void OnIdBanBeChanged();
	partial void OnLoaiChanging(int value);
	partial void OnLoaiChanged();
	partial void OnDateChanging(System.DateTime value);
	partial void OnDateChanged();
	partial void OnIdDuAnChanging(int value);
	partial void OnIdDuAnChanged();
	#endregion
		
		public EntityHoatDong()
		{
			this._EntityDuAn = default(EntityRef<EntityDuAn>);
			this._EntityUser = default(EntityRef<EntityUser>);
			this._EntityUser1 = default(EntityRef<EntityUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUser", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdUser
		{
			get
			{
				return this._IdUser;
			}
			set
			{
				if ((this._IdUser != value))
				{
					if (this._EntityUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUserChanging(value);
					this.SendPropertyChanging();
					this._IdUser = value;
					this.SendPropertyChanged("IdUser");
					this.OnIdUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBanBe", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdBanBe
		{
			get
			{
				return this._IdBanBe;
			}
			set
			{
				if ((this._IdBanBe != value))
				{
					if (this._EntityUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBanBeChanging(value);
					this.SendPropertyChanging();
					this._IdBanBe = value;
					this.SendPropertyChanged("IdBanBe");
					this.OnIdBanBeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Loai", DbType="Int NOT NULL")]
		public int Loai
		{
			get
			{
				return this._Loai;
			}
			set
			{
				if ((this._Loai != value))
				{
					this.OnLoaiChanging(value);
					this.SendPropertyChanging();
					this._Loai = value;
					this.SendPropertyChanged("Loai");
					this.OnLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDuAn", DbType="Int NOT NULL")]
		public int IdDuAn
		{
			get
			{
				return this._IdDuAn;
			}
			set
			{
				if ((this._IdDuAn != value))
				{
					if (this._EntityDuAn.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDuAnChanging(value);
					this.SendPropertyChanging();
					this._IdDuAn = value;
					this.SendPropertyChanged("IdDuAn");
					this.OnIdDuAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDuAn_EntityHoatDong", Storage="_EntityDuAn", ThisKey="IdDuAn", OtherKey="Id", IsForeignKey=true)]
		public EntityDuAn EntityDuAn
		{
			get
			{
				return this._EntityDuAn.Entity;
			}
			set
			{
				EntityDuAn previousValue = this._EntityDuAn.Entity;
				if (((previousValue != value) 
							|| (this._EntityDuAn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityDuAn.Entity = null;
						previousValue.EntityHoatDongs.Remove(this);
					}
					this._EntityDuAn.Entity = value;
					if ((value != null))
					{
						value.EntityHoatDongs.Add(this);
						this._IdDuAn = value.Id;
					}
					else
					{
						this._IdDuAn = default(int);
					}
					this.SendPropertyChanged("EntityDuAn");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityUser_EntityHoatDong", Storage="_EntityUser", ThisKey="IdBanBe", OtherKey="Id", IsForeignKey=true)]
		public EntityUser EntityUser
		{
			get
			{
				return this._EntityUser.Entity;
			}
			set
			{
				EntityUser previousValue = this._EntityUser.Entity;
				if (((previousValue != value) 
							|| (this._EntityUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityUser.Entity = null;
						previousValue.EntityHoatDongs.Remove(this);
					}
					this._EntityUser.Entity = value;
					if ((value != null))
					{
						value.EntityHoatDongs.Add(this);
						this._IdBanBe = value.Id;
					}
					else
					{
						this._IdBanBe = default(int);
					}
					this.SendPropertyChanged("EntityUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityUser_EntityHoatDong1", Storage="_EntityUser1", ThisKey="IdUser", OtherKey="Id", IsForeignKey=true)]
		public EntityUser EntityUser1
		{
			get
			{
				return this._EntityUser1.Entity;
			}
			set
			{
				EntityUser previousValue = this._EntityUser1.Entity;
				if (((previousValue != value) 
							|| (this._EntityUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityUser1.Entity = null;
						previousValue.EntityHoatDongs1.Remove(this);
					}
					this._EntityUser1.Entity = value;
					if ((value != null))
					{
						value.EntityHoatDongs1.Add(this);
						this._IdUser = value.Id;
					}
					else
					{
						this._IdUser = default(int);
					}
					this.SendPropertyChanged("EntityUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntityPhanThuong")]
	public partial class EntityPhanThuong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _IdDuAn;
		
		private System.Nullable<int> _TienHoTro;
		
		private string _NoiDung;
		
		private string _NgayGiao;
		
		private string _HinhThucGiao;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<int> _SoNgay;
		
		private System.Nullable<int> _SoNguoiMua;
		
		private EntitySet<EntityDauTu> _EntityDauTus;
		
		private EntityRef<EntityDuAn> _EntityDuAn;
		
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(int value);
	partial void OnIdChanged();
	partial void OnIdDuAnChanging(System.Nullable<int> value);
	partial void OnIdDuAnChanged();
	partial void OnTienHoTroChanging(System.Nullable<int> value);
	partial void OnTienHoTroChanged();
	partial void OnNoiDungChanging(string value);
	partial void OnNoiDungChanged();
	partial void OnNgayGiaoChanging(string value);
	partial void OnNgayGiaoChanged();
	partial void OnHinhThucGiaoChanging(string value);
	partial void OnHinhThucGiaoChanged();
	partial void OnSoLuongChanging(System.Nullable<int> value);
	partial void OnSoLuongChanged();
	partial void OnSoNgayChanging(System.Nullable<int> value);
	partial void OnSoNgayChanged();
	partial void OnSoNguoiMuaChanging(System.Nullable<int> value);
	partial void OnSoNguoiMuaChanged();
	#endregion
		
		public EntityPhanThuong()
		{
			this._EntityDauTus = new EntitySet<EntityDauTu>(new Action<EntityDauTu>(this.attach_EntityDauTus), new Action<EntityDauTu>(this.detach_EntityDauTus));
			this._EntityDuAn = default(EntityRef<EntityDuAn>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDuAn", DbType="Int")]
		public System.Nullable<int> IdDuAn
		{
			get
			{
				return this._IdDuAn;
			}
			set
			{
				if ((this._IdDuAn != value))
				{
					if (this._EntityDuAn.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDuAnChanging(value);
					this.SendPropertyChanging();
					this._IdDuAn = value;
					this.SendPropertyChanged("IdDuAn");
					this.OnIdDuAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TienHoTro", DbType="Int")]
		public System.Nullable<int> TienHoTro
		{
			get
			{
				return this._TienHoTro;
			}
			set
			{
				if ((this._TienHoTro != value))
				{
					this.OnTienHoTroChanging(value);
					this.SendPropertyChanging();
					this._TienHoTro = value;
					this.SendPropertyChanged("TienHoTro");
					this.OnTienHoTroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(2050)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayGiao", DbType="NVarChar(50)")]
		public string NgayGiao
		{
			get
			{
				return this._NgayGiao;
			}
			set
			{
				if ((this._NgayGiao != value))
				{
					this.OnNgayGiaoChanging(value);
					this.SendPropertyChanging();
					this._NgayGiao = value;
					this.SendPropertyChanged("NgayGiao");
					this.OnNgayGiaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhThucGiao", DbType="NVarChar(350)")]
		public string HinhThucGiao
		{
			get
			{
				return this._HinhThucGiao;
			}
			set
			{
				if ((this._HinhThucGiao != value))
				{
					this.OnHinhThucGiaoChanging(value);
					this.SendPropertyChanging();
					this._HinhThucGiao = value;
					this.SendPropertyChanged("HinhThucGiao");
					this.OnHinhThucGiaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoNgay", DbType="Int")]
		public System.Nullable<int> SoNgay
		{
			get
			{
				return this._SoNgay;
			}
			set
			{
				if ((this._SoNgay != value))
				{
					this.OnSoNgayChanging(value);
					this.SendPropertyChanging();
					this._SoNgay = value;
					this.SendPropertyChanged("SoNgay");
					this.OnSoNgayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoNguoiMua", DbType="Int")]
		public System.Nullable<int> SoNguoiMua
		{
			get
			{
				return this._SoNguoiMua;
			}
			set
			{
				if ((this._SoNguoiMua != value))
				{
					this.OnSoNguoiMuaChanging(value);
					this.SendPropertyChanging();
					this._SoNguoiMua = value;
					this.SendPropertyChanged("SoNguoiMua");
					this.OnSoNguoiMuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityPhanThuong_EntityDauTu", Storage="_EntityDauTus", ThisKey="Id", OtherKey="IdPhanthuong")]
		public EntitySet<EntityDauTu> EntityDauTus
		{
			get
			{
				return this._EntityDauTus;
			}
			set
			{
				this._EntityDauTus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDuAn_EntityPhanThuong", Storage="_EntityDuAn", ThisKey="IdDuAn", OtherKey="Id", IsForeignKey=true)]
		public EntityDuAn EntityDuAn
		{
			get
			{
				return this._EntityDuAn.Entity;
			}
			set
			{
				EntityDuAn previousValue = this._EntityDuAn.Entity;
				if (((previousValue != value) 
							|| (this._EntityDuAn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityDuAn.Entity = null;
						previousValue.EntityPhanThuongs.Remove(this);
					}
					this._EntityDuAn.Entity = value;
					if ((value != null))
					{
						value.EntityPhanThuongs.Add(this);
						this._IdDuAn = value.Id;
					}
					else
					{
						this._IdDuAn = default(Nullable<int>);
					}
					this.SendPropertyChanged("EntityDuAn");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EntityDauTus(EntityDauTu entity)
		{
			this.SendPropertyChanging();
			entity.EntityPhanThuong = this;
		}
		
		private void detach_EntityDauTus(EntityDauTu entity)
		{
			this.SendPropertyChanging();
			entity.EntityPhanThuong = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntityQuote")]
	public partial class EntityQuote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _NoiDung;
		
		private System.Nullable<int> _IdUser;
		
		private string _Image;
		
		private EntityRef<EntityUser> _EntityUser;
		
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(int value);
	partial void OnIdChanged();
	partial void OnNoiDungChanging(string value);
	partial void OnNoiDungChanged();
	partial void OnIdUserChanging(System.Nullable<int> value);
	partial void OnIdUserChanged();
	partial void OnImageChanging(string value);
	partial void OnImageChanged();
	#endregion
		
		public EntityQuote()
		{
			this._EntityUser = default(EntityRef<EntityUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(2050)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUser", DbType="Int")]
		public System.Nullable<int> IdUser
		{
			get
			{
				return this._IdUser;
			}
			set
			{
				if ((this._IdUser != value))
				{
					if (this._EntityUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUserChanging(value);
					this.SendPropertyChanging();
					this._IdUser = value;
					this.SendPropertyChanged("IdUser");
					this.OnIdUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(300)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityUser_EntityQuote", Storage="_EntityUser", ThisKey="IdUser", OtherKey="Id", IsForeignKey=true)]
		public EntityUser EntityUser
		{
			get
			{
				return this._EntityUser.Entity;
			}
			set
			{
				EntityUser previousValue = this._EntityUser.Entity;
				if (((previousValue != value) 
							|| (this._EntityUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityUser.Entity = null;
						previousValue.EntityQuotes.Remove(this);
					}
					this._EntityUser.Entity = value;
					if ((value != null))
					{
						value.EntityQuotes.Add(this);
						this._IdUser = value.Id;
					}
					else
					{
						this._IdUser = default(Nullable<int>);
					}
					this.SendPropertyChanged("EntityUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntityTheoDoi")]
	public partial class EntityTheoDoi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdUser;
		
		private int _IdBanBe;
		
		private System.Nullable<int> _TrangThai;
		
		private System.Nullable<int> _Loaifb;
		
		private System.Nullable<System.DateTime> _Date;
		
		private EntityRef<EntityUser> _EntityUser;
		
		private EntityRef<EntityUser> _EntityUser1;
		
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdUserChanging(int value);
	partial void OnIdUserChanged();
	partial void OnIdBanBeChanging(int value);
	partial void OnIdBanBeChanged();
	partial void OnTrangThaiChanging(System.Nullable<int> value);
	partial void OnTrangThaiChanged();
	partial void OnLoaifbChanging(System.Nullable<int> value);
	partial void OnLoaifbChanged();
	partial void OnDateChanging(System.Nullable<System.DateTime> value);
	partial void OnDateChanged();
	#endregion
		
		public EntityTheoDoi()
		{
			this._EntityUser = default(EntityRef<EntityUser>);
			this._EntityUser1 = default(EntityRef<EntityUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUser", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdUser
		{
			get
			{
				return this._IdUser;
			}
			set
			{
				if ((this._IdUser != value))
				{
					if (this._EntityUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUserChanging(value);
					this.SendPropertyChanging();
					this._IdUser = value;
					this.SendPropertyChanged("IdUser");
					this.OnIdUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBanBe", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdBanBe
		{
			get
			{
				return this._IdBanBe;
			}
			set
			{
				if ((this._IdBanBe != value))
				{
					if (this._EntityUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBanBeChanging(value);
					this.SendPropertyChanging();
					this._IdBanBe = value;
					this.SendPropertyChanged("IdBanBe");
					this.OnIdBanBeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Int")]
		public System.Nullable<int> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Loaifb", DbType="Int")]
		public System.Nullable<int> Loaifb
		{
			get
			{
				return this._Loaifb;
			}
			set
			{
				if ((this._Loaifb != value))
				{
					this.OnLoaifbChanging(value);
					this.SendPropertyChanging();
					this._Loaifb = value;
					this.SendPropertyChanged("Loaifb");
					this.OnLoaifbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityUser_EntityTheoDoi", Storage="_EntityUser", ThisKey="IdUser", OtherKey="Id", IsForeignKey=true)]
		public EntityUser EntityUser
		{
			get
			{
				return this._EntityUser.Entity;
			}
			set
			{
				EntityUser previousValue = this._EntityUser.Entity;
				if (((previousValue != value) 
							|| (this._EntityUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityUser.Entity = null;
						previousValue.EntityTheoDois.Remove(this);
					}
					this._EntityUser.Entity = value;
					if ((value != null))
					{
						value.EntityTheoDois.Add(this);
						this._IdUser = value.Id;
					}
					else
					{
						this._IdUser = default(int);
					}
					this.SendPropertyChanged("EntityUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityUser_EntityTheoDoi1", Storage="_EntityUser1", ThisKey="IdBanBe", OtherKey="Id", IsForeignKey=true)]
		public EntityUser EntityUser1
		{
			get
			{
				return this._EntityUser1.Entity;
			}
			set
			{
				EntityUser previousValue = this._EntityUser1.Entity;
				if (((previousValue != value) 
							|| (this._EntityUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityUser1.Entity = null;
						previousValue.EntityTheoDois1.Remove(this);
					}
					this._EntityUser1.Entity = value;
					if ((value != null))
					{
						value.EntityTheoDois1.Add(this);
						this._IdBanBe = value.Id;
					}
					else
					{
						this._IdBanBe = default(int);
					}
					this.SendPropertyChanged("EntityUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntityTimBan")]
	public partial class EntityTimBan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdUser;
		
		private int _IdFriend;
		
		private EntityRef<EntityUser> _EntityUser;
		
		private EntityRef<EntityUser> _EntityUser1;
		
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdUserChanging(int value);
	partial void OnIdUserChanged();
	partial void OnIdFriendChanging(int value);
	partial void OnIdFriendChanged();
	#endregion
		
		public EntityTimBan()
		{
			this._EntityUser = default(EntityRef<EntityUser>);
			this._EntityUser1 = default(EntityRef<EntityUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUser", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdUser
		{
			get
			{
				return this._IdUser;
			}
			set
			{
				if ((this._IdUser != value))
				{
					if (this._EntityUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUserChanging(value);
					this.SendPropertyChanging();
					this._IdUser = value;
					this.SendPropertyChanged("IdUser");
					this.OnIdUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFriend", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdFriend
		{
			get
			{
				return this._IdFriend;
			}
			set
			{
				if ((this._IdFriend != value))
				{
					if (this._EntityUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFriendChanging(value);
					this.SendPropertyChanging();
					this._IdFriend = value;
					this.SendPropertyChanged("IdFriend");
					this.OnIdFriendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityUser_EntityTimBan", Storage="_EntityUser", ThisKey="IdUser", OtherKey="Id", IsForeignKey=true)]
		public EntityUser EntityUser
		{
			get
			{
				return this._EntityUser.Entity;
			}
			set
			{
				EntityUser previousValue = this._EntityUser.Entity;
				if (((previousValue != value) 
							|| (this._EntityUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityUser.Entity = null;
						previousValue.EntityTimBans.Remove(this);
					}
					this._EntityUser.Entity = value;
					if ((value != null))
					{
						value.EntityTimBans.Add(this);
						this._IdUser = value.Id;
					}
					else
					{
						this._IdUser = default(int);
					}
					this.SendPropertyChanged("EntityUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityUser_EntityTimBan1", Storage="_EntityUser1", ThisKey="IdFriend", OtherKey="Id", IsForeignKey=true)]
		public EntityUser EntityUser1
		{
			get
			{
				return this._EntityUser1.Entity;
			}
			set
			{
				EntityUser previousValue = this._EntityUser1.Entity;
				if (((previousValue != value) 
							|| (this._EntityUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityUser1.Entity = null;
						previousValue.EntityTimBans1.Remove(this);
					}
					this._EntityUser1.Entity = value;
					if ((value != null))
					{
						value.EntityTimBans1.Add(this);
						this._IdFriend = value.Id;
					}
					else
					{
						this._IdFriend = default(int);
					}
					this.SendPropertyChanged("EntityUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntityUser")]
	public partial class EntityUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Email;
		
		private string _Pass;
		
		private string _HoTen;
		
		private string _Avatar;
		
		private System.Nullable<int> _TrangThai;
		
		private string _HasCode;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _DiaDiem;
		
		private string _Website;
		
		private string _GioiThieu;
		
		private string _IdFacebook;
		
		private string _VanityURL;
		
		private string _Login_History;
		
		private string _NhatKyHoatDong;
		
		private System.Nullable<int> _SoLuongHoatDong;
		
		private string _TKPayoo;
		
		private string _SDT;
		
		private EntitySet<EntityBaoCao> _EntityBaoCaos;
		
		private EntitySet<EntityBinhLuan> _EntityBinhLuans;
		
		private EntitySet<EntityDuAn> _EntityDuAns;
		
		private EntitySet<EntityHoatDong> _EntityHoatDongs;
		
		private EntitySet<EntityHoatDong> _EntityHoatDongs1;
		
		private EntitySet<EntityQuote> _EntityQuotes;
		
		private EntitySet<EntityTheoDoi> _EntityTheoDois;
		
		private EntitySet<EntityTheoDoi> _EntityTheoDois1;
		
		private EntitySet<EntityTimBan> _EntityTimBans;
		
		private EntitySet<EntityTimBan> _EntityTimBans1;
		
		private EntitySet<EntityDauTu> _EntityDauTus;
		
		private EntitySet<EntityNhomChienDich> _EntityNhomChienDiches;
		
		private EntitySet<EntityTheoDoiDuAn> _EntityTheoDoiDuAns;
		
		private EntitySet<EntityTinNhan> _EntityTinNhans;
		
		private EntitySet<EntityTinNhan> _EntityTinNhans1;
		
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(int value);
	partial void OnIdChanged();
	partial void OnEmailChanging(string value);
	partial void OnEmailChanged();
	partial void OnPassChanging(string value);
	partial void OnPassChanged();
	partial void OnHoTenChanging(string value);
	partial void OnHoTenChanged();
	partial void OnAvatarChanging(string value);
	partial void OnAvatarChanged();
	partial void OnTrangThaiChanging(System.Nullable<int> value);
	partial void OnTrangThaiChanged();
	partial void OnHasCodeChanging(string value);
	partial void OnHasCodeChanged();
	partial void OnDateChanging(System.Nullable<System.DateTime> value);
	partial void OnDateChanged();
	partial void OnDiaDiemChanging(string value);
	partial void OnDiaDiemChanged();
	partial void OnWebsiteChanging(string value);
	partial void OnWebsiteChanged();
	partial void OnGioiThieuChanging(string value);
	partial void OnGioiThieuChanged();
	partial void OnIdFacebookChanging(string value);
	partial void OnIdFacebookChanged();
	partial void OnVanityURLChanging(string value);
	partial void OnVanityURLChanged();
	partial void OnLogin_HistoryChanging(string value);
	partial void OnLogin_HistoryChanged();
	partial void OnNhatKyHoatDongChanging(string value);
	partial void OnNhatKyHoatDongChanged();
	partial void OnSoLuongHoatDongChanging(System.Nullable<int> value);
	partial void OnSoLuongHoatDongChanged();
	partial void OnTKPayooChanging(string value);
	partial void OnTKPayooChanged();
	partial void OnSDTChanging(string value);
	partial void OnSDTChanged();
	#endregion
		
		public EntityUser()
		{
			this._EntityBaoCaos = new EntitySet<EntityBaoCao>(new Action<EntityBaoCao>(this.attach_EntityBaoCaos), new Action<EntityBaoCao>(this.detach_EntityBaoCaos));
			this._EntityBinhLuans = new EntitySet<EntityBinhLuan>(new Action<EntityBinhLuan>(this.attach_EntityBinhLuans), new Action<EntityBinhLuan>(this.detach_EntityBinhLuans));
			this._EntityDuAns = new EntitySet<EntityDuAn>(new Action<EntityDuAn>(this.attach_EntityDuAns), new Action<EntityDuAn>(this.detach_EntityDuAns));
			this._EntityHoatDongs = new EntitySet<EntityHoatDong>(new Action<EntityHoatDong>(this.attach_EntityHoatDongs), new Action<EntityHoatDong>(this.detach_EntityHoatDongs));
			this._EntityHoatDongs1 = new EntitySet<EntityHoatDong>(new Action<EntityHoatDong>(this.attach_EntityHoatDongs1), new Action<EntityHoatDong>(this.detach_EntityHoatDongs1));
			this._EntityQuotes = new EntitySet<EntityQuote>(new Action<EntityQuote>(this.attach_EntityQuotes), new Action<EntityQuote>(this.detach_EntityQuotes));
			this._EntityTheoDois = new EntitySet<EntityTheoDoi>(new Action<EntityTheoDoi>(this.attach_EntityTheoDois), new Action<EntityTheoDoi>(this.detach_EntityTheoDois));
			this._EntityTheoDois1 = new EntitySet<EntityTheoDoi>(new Action<EntityTheoDoi>(this.attach_EntityTheoDois1), new Action<EntityTheoDoi>(this.detach_EntityTheoDois1));
			this._EntityTimBans = new EntitySet<EntityTimBan>(new Action<EntityTimBan>(this.attach_EntityTimBans), new Action<EntityTimBan>(this.detach_EntityTimBans));
			this._EntityTimBans1 = new EntitySet<EntityTimBan>(new Action<EntityTimBan>(this.attach_EntityTimBans1), new Action<EntityTimBan>(this.detach_EntityTimBans1));
			this._EntityDauTus = new EntitySet<EntityDauTu>(new Action<EntityDauTu>(this.attach_EntityDauTus), new Action<EntityDauTu>(this.detach_EntityDauTus));
			this._EntityNhomChienDiches = new EntitySet<EntityNhomChienDich>(new Action<EntityNhomChienDich>(this.attach_EntityNhomChienDiches), new Action<EntityNhomChienDich>(this.detach_EntityNhomChienDiches));
			this._EntityTheoDoiDuAns = new EntitySet<EntityTheoDoiDuAn>(new Action<EntityTheoDoiDuAn>(this.attach_EntityTheoDoiDuAns), new Action<EntityTheoDoiDuAn>(this.detach_EntityTheoDoiDuAns));
			this._EntityTinNhans = new EntitySet<EntityTinNhan>(new Action<EntityTinNhan>(this.attach_EntityTinNhans), new Action<EntityTinNhan>(this.detach_EntityTinNhans));
			this._EntityTinNhans1 = new EntitySet<EntityTinNhan>(new Action<EntityTinNhan>(this.attach_EntityTinNhans1), new Action<EntityTinNhan>(this.detach_EntityTinNhans1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(80)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pass", DbType="NVarChar(350)")]
		public string Pass
		{
			get
			{
				return this._Pass;
			}
			set
			{
				if ((this._Pass != value))
				{
					this.OnPassChanging(value);
					this.SendPropertyChanging();
					this._Pass = value;
					this.SendPropertyChanged("Pass");
					this.OnPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(350)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Avatar", DbType="NVarChar(650)")]
		public string Avatar
		{
			get
			{
				return this._Avatar;
			}
			set
			{
				if ((this._Avatar != value))
				{
					this.OnAvatarChanging(value);
					this.SendPropertyChanging();
					this._Avatar = value;
					this.SendPropertyChanged("Avatar");
					this.OnAvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Int")]
		public System.Nullable<int> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasCode", DbType="NVarChar(350)")]
		public string HasCode
		{
			get
			{
				return this._HasCode;
			}
			set
			{
				if ((this._HasCode != value))
				{
					this.OnHasCodeChanging(value);
					this.SendPropertyChanging();
					this._HasCode = value;
					this.SendPropertyChanged("HasCode");
					this.OnHasCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaDiem", DbType="NVarChar(450)")]
		public string DiaDiem
		{
			get
			{
				return this._DiaDiem;
			}
			set
			{
				if ((this._DiaDiem != value))
				{
					this.OnDiaDiemChanging(value);
					this.SendPropertyChanging();
					this._DiaDiem = value;
					this.SendPropertyChanged("DiaDiem");
					this.OnDiaDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="NVarChar(350)")]
		public string Website
		{
			get
			{
				return this._Website;
			}
			set
			{
				if ((this._Website != value))
				{
					this.OnWebsiteChanging(value);
					this.SendPropertyChanging();
					this._Website = value;
					this.SendPropertyChanged("Website");
					this.OnWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiThieu", DbType="NVarChar(2050)")]
		public string GioiThieu
		{
			get
			{
				return this._GioiThieu;
			}
			set
			{
				if ((this._GioiThieu != value))
				{
					this.OnGioiThieuChanging(value);
					this.SendPropertyChanging();
					this._GioiThieu = value;
					this.SendPropertyChanged("GioiThieu");
					this.OnGioiThieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFacebook", DbType="NVarChar(350)")]
		public string IdFacebook
		{
			get
			{
				return this._IdFacebook;
			}
			set
			{
				if ((this._IdFacebook != value))
				{
					this.OnIdFacebookChanging(value);
					this.SendPropertyChanging();
					this._IdFacebook = value;
					this.SendPropertyChanged("IdFacebook");
					this.OnIdFacebookChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VanityURL", DbType="NVarChar(350)")]
		public string VanityURL
		{
			get
			{
				return this._VanityURL;
			}
			set
			{
				if ((this._VanityURL != value))
				{
					this.OnVanityURLChanging(value);
					this.SendPropertyChanging();
					this._VanityURL = value;
					this.SendPropertyChanged("VanityURL");
					this.OnVanityURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login_History", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Login_History
		{
			get
			{
				return this._Login_History;
			}
			set
			{
				if ((this._Login_History != value))
				{
					this.OnLogin_HistoryChanging(value);
					this.SendPropertyChanging();
					this._Login_History = value;
					this.SendPropertyChanged("Login_History");
					this.OnLogin_HistoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NhatKyHoatDong", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string NhatKyHoatDong
		{
			get
			{
				return this._NhatKyHoatDong;
			}
			set
			{
				if ((this._NhatKyHoatDong != value))
				{
					this.OnNhatKyHoatDongChanging(value);
					this.SendPropertyChanging();
					this._NhatKyHoatDong = value;
					this.SendPropertyChanged("NhatKyHoatDong");
					this.OnNhatKyHoatDongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongHoatDong", DbType="Int")]
		public System.Nullable<int> SoLuongHoatDong
		{
			get
			{
				return this._SoLuongHoatDong;
			}
			set
			{
				if ((this._SoLuongHoatDong != value))
				{
					this.OnSoLuongHoatDongChanging(value);
					this.SendPropertyChanging();
					this._SoLuongHoatDong = value;
					this.SendPropertyChanged("SoLuongHoatDong");
					this.OnSoLuongHoatDongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TKPayoo", DbType="NVarChar(100)")]
		public string TKPayoo
		{
			get
			{
				return this._TKPayoo;
			}
			set
			{
				if ((this._TKPayoo != value))
				{
					this.OnTKPayooChanging(value);
					this.SendPropertyChanging();
					this._TKPayoo = value;
					this.SendPropertyChanged("TKPayoo");
					this.OnTKPayooChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NVarChar(11)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityUser_EntityBaoCao", Storage="_EntityBaoCaos", ThisKey="Id", OtherKey="IdDuAn")]
		public EntitySet<EntityBaoCao> EntityBaoCaos
		{
			get
			{
				return this._EntityBaoCaos;
			}
			set
			{
				this._EntityBaoCaos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityUser_EntityBinhLuan", Storage="_EntityBinhLuans", ThisKey="Id", OtherKey="IdUser")]
		public EntitySet<EntityBinhLuan> EntityBinhLuans
		{
			get
			{
				return this._EntityBinhLuans;
			}
			set
			{
				this._EntityBinhLuans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityUser_EntityDuAn", Storage="_EntityDuAns", ThisKey="Id", OtherKey="IdUser")]
		public EntitySet<EntityDuAn> EntityDuAns
		{
			get
			{
				return this._EntityDuAns;
			}
			set
			{
				this._EntityDuAns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityUser_EntityHoatDong", Storage="_EntityHoatDongs", ThisKey="Id", OtherKey="IdBanBe")]
		public EntitySet<EntityHoatDong> EntityHoatDongs
		{
			get
			{
				return this._EntityHoatDongs;
			}
			set
			{
				this._EntityHoatDongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityUser_EntityHoatDong1", Storage="_EntityHoatDongs1", ThisKey="Id", OtherKey="IdUser")]
		public EntitySet<EntityHoatDong> EntityHoatDongs1
		{
			get
			{
				return this._EntityHoatDongs1;
			}
			set
			{
				this._EntityHoatDongs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityUser_EntityQuote", Storage="_EntityQuotes", ThisKey="Id", OtherKey="IdUser")]
		public EntitySet<EntityQuote> EntityQuotes
		{
			get
			{
				return this._EntityQuotes;
			}
			set
			{
				this._EntityQuotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityUser_EntityTheoDoi", Storage="_EntityTheoDois", ThisKey="Id", OtherKey="IdUser")]
		public EntitySet<EntityTheoDoi> EntityTheoDois
		{
			get
			{
				return this._EntityTheoDois;
			}
			set
			{
				this._EntityTheoDois.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityUser_EntityTheoDoi1", Storage="_EntityTheoDois1", ThisKey="Id", OtherKey="IdBanBe")]
		public EntitySet<EntityTheoDoi> EntityTheoDois1
		{
			get
			{
				return this._EntityTheoDois1;
			}
			set
			{
				this._EntityTheoDois1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityUser_EntityTimBan", Storage="_EntityTimBans", ThisKey="Id", OtherKey="IdUser")]
		public EntitySet<EntityTimBan> EntityTimBans
		{
			get
			{
				return this._EntityTimBans;
			}
			set
			{
				this._EntityTimBans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityUser_EntityTimBan1", Storage="_EntityTimBans1", ThisKey="Id", OtherKey="IdFriend")]
		public EntitySet<EntityTimBan> EntityTimBans1
		{
			get
			{
				return this._EntityTimBans1;
			}
			set
			{
				this._EntityTimBans1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityUser_EntityDauTu", Storage="_EntityDauTus", ThisKey="Id", OtherKey="IdUser")]
		public EntitySet<EntityDauTu> EntityDauTus
		{
			get
			{
				return this._EntityDauTus;
			}
			set
			{
				this._EntityDauTus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityUser_EntityNhomChienDich", Storage="_EntityNhomChienDiches", ThisKey="Id", OtherKey="IdUser")]
		public EntitySet<EntityNhomChienDich> EntityNhomChienDiches
		{
			get
			{
				return this._EntityNhomChienDiches;
			}
			set
			{
				this._EntityNhomChienDiches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityUser_EntityTheoDoiDuAn", Storage="_EntityTheoDoiDuAns", ThisKey="Id", OtherKey="IdUser")]
		public EntitySet<EntityTheoDoiDuAn> EntityTheoDoiDuAns
		{
			get
			{
				return this._EntityTheoDoiDuAns;
			}
			set
			{
				this._EntityTheoDoiDuAns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityUser_EntityTinNhan", Storage="_EntityTinNhans", ThisKey="Id", OtherKey="IdUserGui")]
		public EntitySet<EntityTinNhan> EntityTinNhans
		{
			get
			{
				return this._EntityTinNhans;
			}
			set
			{
				this._EntityTinNhans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityUser_EntityTinNhan1", Storage="_EntityTinNhans1", ThisKey="Id", OtherKey="IdUserNhan")]
		public EntitySet<EntityTinNhan> EntityTinNhans1
		{
			get
			{
				return this._EntityTinNhans1;
			}
			set
			{
				this._EntityTinNhans1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EntityBaoCaos(EntityBaoCao entity)
		{
			this.SendPropertyChanging();
			entity.EntityUser = this;
		}
		
		private void detach_EntityBaoCaos(EntityBaoCao entity)
		{
			this.SendPropertyChanging();
			entity.EntityUser = null;
		}
		
		private void attach_EntityBinhLuans(EntityBinhLuan entity)
		{
			this.SendPropertyChanging();
			entity.EntityUser = this;
		}
		
		private void detach_EntityBinhLuans(EntityBinhLuan entity)
		{
			this.SendPropertyChanging();
			entity.EntityUser = null;
		}
		
		private void attach_EntityDuAns(EntityDuAn entity)
		{
			this.SendPropertyChanging();
			entity.EntityUser = this;
		}
		
		private void detach_EntityDuAns(EntityDuAn entity)
		{
			this.SendPropertyChanging();
			entity.EntityUser = null;
		}
		
		private void attach_EntityHoatDongs(EntityHoatDong entity)
		{
			this.SendPropertyChanging();
			entity.EntityUser = this;
		}
		
		private void detach_EntityHoatDongs(EntityHoatDong entity)
		{
			this.SendPropertyChanging();
			entity.EntityUser = null;
		}
		
		private void attach_EntityHoatDongs1(EntityHoatDong entity)
		{
			this.SendPropertyChanging();
			entity.EntityUser1 = this;
		}
		
		private void detach_EntityHoatDongs1(EntityHoatDong entity)
		{
			this.SendPropertyChanging();
			entity.EntityUser1 = null;
		}
		
		private void attach_EntityQuotes(EntityQuote entity)
		{
			this.SendPropertyChanging();
			entity.EntityUser = this;
		}
		
		private void detach_EntityQuotes(EntityQuote entity)
		{
			this.SendPropertyChanging();
			entity.EntityUser = null;
		}
		
		private void attach_EntityTheoDois(EntityTheoDoi entity)
		{
			this.SendPropertyChanging();
			entity.EntityUser = this;
		}
		
		private void detach_EntityTheoDois(EntityTheoDoi entity)
		{
			this.SendPropertyChanging();
			entity.EntityUser = null;
		}
		
		private void attach_EntityTheoDois1(EntityTheoDoi entity)
		{
			this.SendPropertyChanging();
			entity.EntityUser1 = this;
		}
		
		private void detach_EntityTheoDois1(EntityTheoDoi entity)
		{
			this.SendPropertyChanging();
			entity.EntityUser1 = null;
		}
		
		private void attach_EntityTimBans(EntityTimBan entity)
		{
			this.SendPropertyChanging();
			entity.EntityUser = this;
		}
		
		private void detach_EntityTimBans(EntityTimBan entity)
		{
			this.SendPropertyChanging();
			entity.EntityUser = null;
		}
		
		private void attach_EntityTimBans1(EntityTimBan entity)
		{
			this.SendPropertyChanging();
			entity.EntityUser1 = this;
		}
		
		private void detach_EntityTimBans1(EntityTimBan entity)
		{
			this.SendPropertyChanging();
			entity.EntityUser1 = null;
		}
		
		private void attach_EntityDauTus(EntityDauTu entity)
		{
			this.SendPropertyChanging();
			entity.EntityUser = this;
		}
		
		private void detach_EntityDauTus(EntityDauTu entity)
		{
			this.SendPropertyChanging();
			entity.EntityUser = null;
		}
		
		private void attach_EntityNhomChienDiches(EntityNhomChienDich entity)
		{
			this.SendPropertyChanging();
			entity.EntityUser = this;
		}
		
		private void detach_EntityNhomChienDiches(EntityNhomChienDich entity)
		{
			this.SendPropertyChanging();
			entity.EntityUser = null;
		}
		
		private void attach_EntityTheoDoiDuAns(EntityTheoDoiDuAn entity)
		{
			this.SendPropertyChanging();
			entity.EntityUser = this;
		}
		
		private void detach_EntityTheoDoiDuAns(EntityTheoDoiDuAn entity)
		{
			this.SendPropertyChanging();
			entity.EntityUser = null;
		}
		
		private void attach_EntityTinNhans(EntityTinNhan entity)
		{
			this.SendPropertyChanging();
			entity.EntityUser = this;
		}
		
		private void detach_EntityTinNhans(EntityTinNhan entity)
		{
			this.SendPropertyChanging();
			entity.EntityUser = null;
		}
		
		private void attach_EntityTinNhans1(EntityTinNhan entity)
		{
			this.SendPropertyChanging();
			entity.EntityUser1 = this;
		}
		
		private void detach_EntityTinNhans1(EntityTinNhan entity)
		{
			this.SendPropertyChanging();
			entity.EntityUser1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="firststep.EntityCapNhatDuAn")]
	public partial class EntityCapNhatDuAn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _IdDuAn;
		
		private string _TieuDe;
		
		private string _NoiDung;
		
		private System.Nullable<System.DateTime> _ThoiGian;
		
		private System.Nullable<int> _SoLuotThich;
		
		private System.Nullable<int> _TrangThai;
		
		private EntityRef<EntityDuAn> _EntityDuAn;
		
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(int value);
	partial void OnIdChanged();
	partial void OnIdDuAnChanging(System.Nullable<int> value);
	partial void OnIdDuAnChanged();
	partial void OnTieuDeChanging(string value);
	partial void OnTieuDeChanged();
	partial void OnNoiDungChanging(string value);
	partial void OnNoiDungChanged();
	partial void OnThoiGianChanging(System.Nullable<System.DateTime> value);
	partial void OnThoiGianChanged();
	partial void OnSoLuotThichChanging(System.Nullable<int> value);
	partial void OnSoLuotThichChanged();
	partial void OnTrangThaiChanging(System.Nullable<int> value);
	partial void OnTrangThaiChanged();
	#endregion
		
		public EntityCapNhatDuAn()
		{
			this._EntityDuAn = default(EntityRef<EntityDuAn>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDuAn", DbType="Int")]
		public System.Nullable<int> IdDuAn
		{
			get
			{
				return this._IdDuAn;
			}
			set
			{
				if ((this._IdDuAn != value))
				{
					if (this._EntityDuAn.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDuAnChanging(value);
					this.SendPropertyChanging();
					this._IdDuAn = value;
					this.SendPropertyChanged("IdDuAn");
					this.OnIdDuAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TieuDe", DbType="NVarChar(50)")]
		public string TieuDe
		{
			get
			{
				return this._TieuDe;
			}
			set
			{
				if ((this._TieuDe != value))
				{
					this.OnTieuDeChanging(value);
					this.SendPropertyChanging();
					this._TieuDe = value;
					this.SendPropertyChanged("TieuDe");
					this.OnTieuDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(MAX)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGian", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGian
		{
			get
			{
				return this._ThoiGian;
			}
			set
			{
				if ((this._ThoiGian != value))
				{
					this.OnThoiGianChanging(value);
					this.SendPropertyChanging();
					this._ThoiGian = value;
					this.SendPropertyChanged("ThoiGian");
					this.OnThoiGianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuotThich", DbType="Int")]
		public System.Nullable<int> SoLuotThich
		{
			get
			{
				return this._SoLuotThich;
			}
			set
			{
				if ((this._SoLuotThich != value))
				{
					this.OnSoLuotThichChanging(value);
					this.SendPropertyChanging();
					this._SoLuotThich = value;
					this.SendPropertyChanged("SoLuotThich");
					this.OnSoLuotThichChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Int")]
		public System.Nullable<int> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDuAn_EntityCapNhatDuAn", Storage="_EntityDuAn", ThisKey="IdDuAn", OtherKey="Id", IsForeignKey=true)]
		public EntityDuAn EntityDuAn
		{
			get
			{
				return this._EntityDuAn.Entity;
			}
			set
			{
				EntityDuAn previousValue = this._EntityDuAn.Entity;
				if (((previousValue != value) 
							|| (this._EntityDuAn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityDuAn.Entity = null;
						previousValue.EntityCapNhatDuAns.Remove(this);
					}
					this._EntityDuAn.Entity = value;
					if ((value != null))
					{
						value.EntityCapNhatDuAns.Add(this);
						this._IdDuAn = value.Id;
					}
					else
					{
						this._IdDuAn = default(Nullable<int>);
					}
					this.SendPropertyChanged("EntityDuAn");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="firststep.EntityChiTietDanhMuc")]
	public partial class EntityChiTietDanhMuc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _IdDuAn;
		
		private System.Nullable<int> _IdDanhMuc;
		
		private System.Nullable<System.DateTime> _Date;
		
		private EntityRef<EntityDanhMuc> _EntityDanhMuc;
		
		private EntityRef<EntityDuAn> _EntityDuAn;
		
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(int value);
	partial void OnIdChanged();
	partial void OnIdDuAnChanging(System.Nullable<int> value);
	partial void OnIdDuAnChanged();
	partial void OnIdDanhMucChanging(System.Nullable<int> value);
	partial void OnIdDanhMucChanged();
	partial void OnDateChanging(System.Nullable<System.DateTime> value);
	partial void OnDateChanged();
	#endregion
		
		public EntityChiTietDanhMuc()
		{
			this._EntityDanhMuc = default(EntityRef<EntityDanhMuc>);
			this._EntityDuAn = default(EntityRef<EntityDuAn>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDuAn", DbType="Int")]
		public System.Nullable<int> IdDuAn
		{
			get
			{
				return this._IdDuAn;
			}
			set
			{
				if ((this._IdDuAn != value))
				{
					if (this._EntityDuAn.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDuAnChanging(value);
					this.SendPropertyChanging();
					this._IdDuAn = value;
					this.SendPropertyChanged("IdDuAn");
					this.OnIdDuAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDanhMuc", DbType="Int")]
		public System.Nullable<int> IdDanhMuc
		{
			get
			{
				return this._IdDanhMuc;
			}
			set
			{
				if ((this._IdDanhMuc != value))
				{
					if (this._EntityDanhMuc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDanhMucChanging(value);
					this.SendPropertyChanging();
					this._IdDanhMuc = value;
					this.SendPropertyChanged("IdDanhMuc");
					this.OnIdDanhMucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDanhMuc_EntityChiTietDanhMuc", Storage="_EntityDanhMuc", ThisKey="IdDanhMuc", OtherKey="Id", IsForeignKey=true)]
		public EntityDanhMuc EntityDanhMuc
		{
			get
			{
				return this._EntityDanhMuc.Entity;
			}
			set
			{
				EntityDanhMuc previousValue = this._EntityDanhMuc.Entity;
				if (((previousValue != value) 
							|| (this._EntityDanhMuc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityDanhMuc.Entity = null;
						previousValue.EntityChiTietDanhMucs.Remove(this);
					}
					this._EntityDanhMuc.Entity = value;
					if ((value != null))
					{
						value.EntityChiTietDanhMucs.Add(this);
						this._IdDanhMuc = value.Id;
					}
					else
					{
						this._IdDanhMuc = default(Nullable<int>);
					}
					this.SendPropertyChanged("EntityDanhMuc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDuAn_EntityChiTietDanhMuc", Storage="_EntityDuAn", ThisKey="IdDuAn", OtherKey="Id", IsForeignKey=true)]
		public EntityDuAn EntityDuAn
		{
			get
			{
				return this._EntityDuAn.Entity;
			}
			set
			{
				EntityDuAn previousValue = this._EntityDuAn.Entity;
				if (((previousValue != value) 
							|| (this._EntityDuAn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityDuAn.Entity = null;
						previousValue.EntityChiTietDanhMucs.Remove(this);
					}
					this._EntityDuAn.Entity = value;
					if ((value != null))
					{
						value.EntityChiTietDanhMucs.Add(this);
						this._IdDuAn = value.Id;
					}
					else
					{
						this._IdDuAn = default(Nullable<int>);
					}
					this.SendPropertyChanged("EntityDuAn");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="firststep.EntityChiTietDuAn")]
	public partial class EntityChiTietDuAn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _NoiDung;
		
		private System.Nullable<int> _IdDuAn;
		
		private EntityRef<EntityDuAn> _EntityDuAn;
		
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(int value);
	partial void OnIdChanged();
	partial void OnNoiDungChanging(string value);
	partial void OnNoiDungChanged();
	partial void OnIdDuAnChanging(System.Nullable<int> value);
	partial void OnIdDuAnChanged();
	#endregion
		
		public EntityChiTietDuAn()
		{
			this._EntityDuAn = default(EntityRef<EntityDuAn>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(MAX)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDuAn", DbType="Int")]
		public System.Nullable<int> IdDuAn
		{
			get
			{
				return this._IdDuAn;
			}
			set
			{
				if ((this._IdDuAn != value))
				{
					if (this._EntityDuAn.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDuAnChanging(value);
					this.SendPropertyChanging();
					this._IdDuAn = value;
					this.SendPropertyChanged("IdDuAn");
					this.OnIdDuAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDuAn_EntityChiTietDuAn", Storage="_EntityDuAn", ThisKey="IdDuAn", OtherKey="Id", IsForeignKey=true)]
		public EntityDuAn EntityDuAn
		{
			get
			{
				return this._EntityDuAn.Entity;
			}
			set
			{
				EntityDuAn previousValue = this._EntityDuAn.Entity;
				if (((previousValue != value) 
							|| (this._EntityDuAn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityDuAn.Entity = null;
						previousValue.EntityChiTietDuAns.Remove(this);
					}
					this._EntityDuAn.Entity = value;
					if ((value != null))
					{
						value.EntityChiTietDuAns.Add(this);
						this._IdDuAn = value.Id;
					}
					else
					{
						this._IdDuAn = default(Nullable<int>);
					}
					this.SendPropertyChanged("EntityDuAn");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="firststep.EntityDauTu")]
	public partial class EntityDauTu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _IdDuAn;
		
		private System.Nullable<int> _IdUser;
		
		private System.Nullable<int> _SoTienDauTu;
		
		private System.Nullable<System.DateTime> _ThoiGian;
		
		private System.Nullable<int> _IdPhanthuong;
		
		private System.Nullable<int> _TrangThai;
		
		private string _Note;
		
		private string _NoteOwner;
		
		private string _OrderID_Payoo;
		
		private EntityRef<EntityDuAn> _EntityDuAn;
		
		private EntityRef<EntityPhanThuong> _EntityPhanThuong;
		
		private EntityRef<EntityUser> _EntityUser;
		
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(int value);
	partial void OnIdChanged();
	partial void OnIdDuAnChanging(System.Nullable<int> value);
	partial void OnIdDuAnChanged();
	partial void OnIdUserChanging(System.Nullable<int> value);
	partial void OnIdUserChanged();
	partial void OnSoTienDauTuChanging(System.Nullable<int> value);
	partial void OnSoTienDauTuChanged();
	partial void OnThoiGianChanging(System.Nullable<System.DateTime> value);
	partial void OnThoiGianChanged();
	partial void OnIdPhanthuongChanging(System.Nullable<int> value);
	partial void OnIdPhanthuongChanged();
	partial void OnTrangThaiChanging(System.Nullable<int> value);
	partial void OnTrangThaiChanged();
	partial void OnNoteChanging(string value);
	partial void OnNoteChanged();
	partial void OnNoteOwnerChanging(string value);
	partial void OnNoteOwnerChanged();
	partial void OnOrderID_PayooChanging(string value);
	partial void OnOrderID_PayooChanged();
	#endregion
		
		public EntityDauTu()
		{
			this._EntityDuAn = default(EntityRef<EntityDuAn>);
			this._EntityPhanThuong = default(EntityRef<EntityPhanThuong>);
			this._EntityUser = default(EntityRef<EntityUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDuAn", DbType="Int")]
		public System.Nullable<int> IdDuAn
		{
			get
			{
				return this._IdDuAn;
			}
			set
			{
				if ((this._IdDuAn != value))
				{
					if (this._EntityDuAn.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDuAnChanging(value);
					this.SendPropertyChanging();
					this._IdDuAn = value;
					this.SendPropertyChanged("IdDuAn");
					this.OnIdDuAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUser", DbType="Int")]
		public System.Nullable<int> IdUser
		{
			get
			{
				return this._IdUser;
			}
			set
			{
				if ((this._IdUser != value))
				{
					if (this._EntityUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUserChanging(value);
					this.SendPropertyChanging();
					this._IdUser = value;
					this.SendPropertyChanged("IdUser");
					this.OnIdUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTienDauTu", DbType="Int")]
		public System.Nullable<int> SoTienDauTu
		{
			get
			{
				return this._SoTienDauTu;
			}
			set
			{
				if ((this._SoTienDauTu != value))
				{
					this.OnSoTienDauTuChanging(value);
					this.SendPropertyChanging();
					this._SoTienDauTu = value;
					this.SendPropertyChanged("SoTienDauTu");
					this.OnSoTienDauTuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGian", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGian
		{
			get
			{
				return this._ThoiGian;
			}
			set
			{
				if ((this._ThoiGian != value))
				{
					this.OnThoiGianChanging(value);
					this.SendPropertyChanging();
					this._ThoiGian = value;
					this.SendPropertyChanged("ThoiGian");
					this.OnThoiGianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPhanthuong", DbType="Int")]
		public System.Nullable<int> IdPhanthuong
		{
			get
			{
				return this._IdPhanthuong;
			}
			set
			{
				if ((this._IdPhanthuong != value))
				{
					if (this._EntityPhanThuong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPhanthuongChanging(value);
					this.SendPropertyChanging();
					this._IdPhanthuong = value;
					this.SendPropertyChanged("IdPhanthuong");
					this.OnIdPhanthuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Int")]
		public System.Nullable<int> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(500)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoteOwner", DbType="NVarChar(500)")]
		public string NoteOwner
		{
			get
			{
				return this._NoteOwner;
			}
			set
			{
				if ((this._NoteOwner != value))
				{
					this.OnNoteOwnerChanging(value);
					this.SendPropertyChanging();
					this._NoteOwner = value;
					this.SendPropertyChanged("NoteOwner");
					this.OnNoteOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID_Payoo", DbType="NVarChar(100)")]
		public string OrderID_Payoo
		{
			get
			{
				return this._OrderID_Payoo;
			}
			set
			{
				if ((this._OrderID_Payoo != value))
				{
					this.OnOrderID_PayooChanging(value);
					this.SendPropertyChanging();
					this._OrderID_Payoo = value;
					this.SendPropertyChanged("OrderID_Payoo");
					this.OnOrderID_PayooChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDuAn_EntityDauTu", Storage="_EntityDuAn", ThisKey="IdDuAn", OtherKey="Id", IsForeignKey=true)]
		public EntityDuAn EntityDuAn
		{
			get
			{
				return this._EntityDuAn.Entity;
			}
			set
			{
				EntityDuAn previousValue = this._EntityDuAn.Entity;
				if (((previousValue != value) 
							|| (this._EntityDuAn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityDuAn.Entity = null;
						previousValue.EntityDauTus.Remove(this);
					}
					this._EntityDuAn.Entity = value;
					if ((value != null))
					{
						value.EntityDauTus.Add(this);
						this._IdDuAn = value.Id;
					}
					else
					{
						this._IdDuAn = default(Nullable<int>);
					}
					this.SendPropertyChanged("EntityDuAn");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityPhanThuong_EntityDauTu", Storage="_EntityPhanThuong", ThisKey="IdPhanthuong", OtherKey="Id", IsForeignKey=true)]
		public EntityPhanThuong EntityPhanThuong
		{
			get
			{
				return this._EntityPhanThuong.Entity;
			}
			set
			{
				EntityPhanThuong previousValue = this._EntityPhanThuong.Entity;
				if (((previousValue != value) 
							|| (this._EntityPhanThuong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityPhanThuong.Entity = null;
						previousValue.EntityDauTus.Remove(this);
					}
					this._EntityPhanThuong.Entity = value;
					if ((value != null))
					{
						value.EntityDauTus.Add(this);
						this._IdPhanthuong = value.Id;
					}
					else
					{
						this._IdPhanthuong = default(Nullable<int>);
					}
					this.SendPropertyChanged("EntityPhanThuong");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityUser_EntityDauTu", Storage="_EntityUser", ThisKey="IdUser", OtherKey="Id", IsForeignKey=true)]
		public EntityUser EntityUser
		{
			get
			{
				return this._EntityUser.Entity;
			}
			set
			{
				EntityUser previousValue = this._EntityUser.Entity;
				if (((previousValue != value) 
							|| (this._EntityUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityUser.Entity = null;
						previousValue.EntityDauTus.Remove(this);
					}
					this._EntityUser.Entity = value;
					if ((value != null))
					{
						value.EntityDauTus.Add(this);
						this._IdUser = value.Id;
					}
					else
					{
						this._IdUser = default(Nullable<int>);
					}
					this.SendPropertyChanged("EntityUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="firststep.EntityDuAnFeature")]
	public partial class EntityDuAnFeature : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _IdDuAn;
		
		private System.Nullable<int> _IdFeature;
		
		private EntityRef<EntityDanhMuc> _EntityDanhMuc;
		
		private EntityRef<EntityDuAn> _EntityDuAn;
		
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(int value);
	partial void OnIdChanged();
	partial void OnIdDuAnChanging(System.Nullable<int> value);
	partial void OnIdDuAnChanged();
	partial void OnIdFeatureChanging(System.Nullable<int> value);
	partial void OnIdFeatureChanged();
	#endregion
		
		public EntityDuAnFeature()
		{
			this._EntityDanhMuc = default(EntityRef<EntityDanhMuc>);
			this._EntityDuAn = default(EntityRef<EntityDuAn>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDuAn", DbType="Int")]
		public System.Nullable<int> IdDuAn
		{
			get
			{
				return this._IdDuAn;
			}
			set
			{
				if ((this._IdDuAn != value))
				{
					if (this._EntityDuAn.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDuAnChanging(value);
					this.SendPropertyChanging();
					this._IdDuAn = value;
					this.SendPropertyChanged("IdDuAn");
					this.OnIdDuAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFeature", DbType="Int")]
		public System.Nullable<int> IdFeature
		{
			get
			{
				return this._IdFeature;
			}
			set
			{
				if ((this._IdFeature != value))
				{
					if (this._EntityDanhMuc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFeatureChanging(value);
					this.SendPropertyChanging();
					this._IdFeature = value;
					this.SendPropertyChanged("IdFeature");
					this.OnIdFeatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDanhMuc_EntityDuAnFeature", Storage="_EntityDanhMuc", ThisKey="IdFeature", OtherKey="Id", IsForeignKey=true)]
		public EntityDanhMuc EntityDanhMuc
		{
			get
			{
				return this._EntityDanhMuc.Entity;
			}
			set
			{
				EntityDanhMuc previousValue = this._EntityDanhMuc.Entity;
				if (((previousValue != value) 
							|| (this._EntityDanhMuc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityDanhMuc.Entity = null;
						previousValue.EntityDuAnFeatures.Remove(this);
					}
					this._EntityDanhMuc.Entity = value;
					if ((value != null))
					{
						value.EntityDuAnFeatures.Add(this);
						this._IdFeature = value.Id;
					}
					else
					{
						this._IdFeature = default(Nullable<int>);
					}
					this.SendPropertyChanged("EntityDanhMuc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDuAn_EntityDuAnFeature", Storage="_EntityDuAn", ThisKey="IdDuAn", OtherKey="Id", IsForeignKey=true)]
		public EntityDuAn EntityDuAn
		{
			get
			{
				return this._EntityDuAn.Entity;
			}
			set
			{
				EntityDuAn previousValue = this._EntityDuAn.Entity;
				if (((previousValue != value) 
							|| (this._EntityDuAn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityDuAn.Entity = null;
						previousValue.EntityDuAnFeatures.Remove(this);
					}
					this._EntityDuAn.Entity = value;
					if ((value != null))
					{
						value.EntityDuAnFeatures.Add(this);
						this._IdDuAn = value.Id;
					}
					else
					{
						this._IdDuAn = default(Nullable<int>);
					}
					this.SendPropertyChanged("EntityDuAn");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="firststep.EntityDuAnTag")]
	public partial class EntityDuAnTag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _IdDuAn;
		
		private System.Nullable<int> _IdTag;
		
		private EntityRef<EntityDanhMuc> _EntityDanhMuc;
		
		private EntityRef<EntityDuAn> _EntityDuAn;
		
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(int value);
	partial void OnIdChanged();
	partial void OnIdDuAnChanging(System.Nullable<int> value);
	partial void OnIdDuAnChanged();
	partial void OnIdTagChanging(System.Nullable<int> value);
	partial void OnIdTagChanged();
	#endregion
		
		public EntityDuAnTag()
		{
			this._EntityDanhMuc = default(EntityRef<EntityDanhMuc>);
			this._EntityDuAn = default(EntityRef<EntityDuAn>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDuAn", DbType="Int")]
		public System.Nullable<int> IdDuAn
		{
			get
			{
				return this._IdDuAn;
			}
			set
			{
				if ((this._IdDuAn != value))
				{
					if (this._EntityDuAn.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDuAnChanging(value);
					this.SendPropertyChanging();
					this._IdDuAn = value;
					this.SendPropertyChanged("IdDuAn");
					this.OnIdDuAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTag", DbType="Int")]
		public System.Nullable<int> IdTag
		{
			get
			{
				return this._IdTag;
			}
			set
			{
				if ((this._IdTag != value))
				{
					if (this._EntityDanhMuc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTagChanging(value);
					this.SendPropertyChanging();
					this._IdTag = value;
					this.SendPropertyChanged("IdTag");
					this.OnIdTagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDanhMuc_EntityDuAnTag", Storage="_EntityDanhMuc", ThisKey="IdTag", OtherKey="Id", IsForeignKey=true)]
		public EntityDanhMuc EntityDanhMuc
		{
			get
			{
				return this._EntityDanhMuc.Entity;
			}
			set
			{
				EntityDanhMuc previousValue = this._EntityDanhMuc.Entity;
				if (((previousValue != value) 
							|| (this._EntityDanhMuc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityDanhMuc.Entity = null;
						previousValue.EntityDuAnTags.Remove(this);
					}
					this._EntityDanhMuc.Entity = value;
					if ((value != null))
					{
						value.EntityDuAnTags.Add(this);
						this._IdTag = value.Id;
					}
					else
					{
						this._IdTag = default(Nullable<int>);
					}
					this.SendPropertyChanged("EntityDanhMuc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDuAn_EntityDuAnTag", Storage="_EntityDuAn", ThisKey="IdDuAn", OtherKey="Id", IsForeignKey=true)]
		public EntityDuAn EntityDuAn
		{
			get
			{
				return this._EntityDuAn.Entity;
			}
			set
			{
				EntityDuAn previousValue = this._EntityDuAn.Entity;
				if (((previousValue != value) 
							|| (this._EntityDuAn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityDuAn.Entity = null;
						previousValue.EntityDuAnTags.Remove(this);
					}
					this._EntityDuAn.Entity = value;
					if ((value != null))
					{
						value.EntityDuAnTags.Add(this);
						this._IdDuAn = value.Id;
					}
					else
					{
						this._IdDuAn = default(Nullable<int>);
					}
					this.SendPropertyChanged("EntityDuAn");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="firststep.EntityFAQ")]
	public partial class EntityFAQ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _Loai;
		
		private string _TieuDe;
		
		private string _NoiDung;
		
		private System.Nullable<int> _ViTri;
		
		private System.Nullable<int> _IdRoot;
		
		private EntitySet<EntityFAQ> _EntityFAQs;
		
		private EntityRef<EntityFAQ> _EntityFAQ1;
		
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(int value);
	partial void OnIdChanged();
	partial void OnLoaiChanging(System.Nullable<int> value);
	partial void OnLoaiChanged();
	partial void OnTieuDeChanging(string value);
	partial void OnTieuDeChanged();
	partial void OnNoiDungChanging(string value);
	partial void OnNoiDungChanged();
	partial void OnViTriChanging(System.Nullable<int> value);
	partial void OnViTriChanged();
	partial void OnIdRootChanging(System.Nullable<int> value);
	partial void OnIdRootChanged();
	#endregion
		
		public EntityFAQ()
		{
			this._EntityFAQs = new EntitySet<EntityFAQ>(new Action<EntityFAQ>(this.attach_EntityFAQs), new Action<EntityFAQ>(this.detach_EntityFAQs));
			this._EntityFAQ1 = default(EntityRef<EntityFAQ>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Loai", DbType="Int")]
		public System.Nullable<int> Loai
		{
			get
			{
				return this._Loai;
			}
			set
			{
				if ((this._Loai != value))
				{
					this.OnLoaiChanging(value);
					this.SendPropertyChanging();
					this._Loai = value;
					this.SendPropertyChanged("Loai");
					this.OnLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TieuDe", DbType="NVarChar(2050)")]
		public string TieuDe
		{
			get
			{
				return this._TieuDe;
			}
			set
			{
				if ((this._TieuDe != value))
				{
					this.OnTieuDeChanging(value);
					this.SendPropertyChanging();
					this._TieuDe = value;
					this.SendPropertyChanged("TieuDe");
					this.OnTieuDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViTri", DbType="Int")]
		public System.Nullable<int> ViTri
		{
			get
			{
				return this._ViTri;
			}
			set
			{
				if ((this._ViTri != value))
				{
					this.OnViTriChanging(value);
					this.SendPropertyChanging();
					this._ViTri = value;
					this.SendPropertyChanged("ViTri");
					this.OnViTriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdRoot", DbType="Int")]
		public System.Nullable<int> IdRoot
		{
			get
			{
				return this._IdRoot;
			}
			set
			{
				if ((this._IdRoot != value))
				{
					if (this._EntityFAQ1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdRootChanging(value);
					this.SendPropertyChanging();
					this._IdRoot = value;
					this.SendPropertyChanged("IdRoot");
					this.OnIdRootChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityFAQ_EntityFAQ", Storage="_EntityFAQs", ThisKey="Id", OtherKey="IdRoot")]
		public EntitySet<EntityFAQ> EntityFAQs
		{
			get
			{
				return this._EntityFAQs;
			}
			set
			{
				this._EntityFAQs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityFAQ_EntityFAQ", Storage="_EntityFAQ1", ThisKey="IdRoot", OtherKey="Id", IsForeignKey=true)]
		public EntityFAQ EntityFAQ1
		{
			get
			{
				return this._EntityFAQ1.Entity;
			}
			set
			{
				EntityFAQ previousValue = this._EntityFAQ1.Entity;
				if (((previousValue != value) 
							|| (this._EntityFAQ1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityFAQ1.Entity = null;
						previousValue.EntityFAQs.Remove(this);
					}
					this._EntityFAQ1.Entity = value;
					if ((value != null))
					{
						value.EntityFAQs.Add(this);
						this._IdRoot = value.Id;
					}
					else
					{
						this._IdRoot = default(Nullable<int>);
					}
					this.SendPropertyChanged("EntityFAQ1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EntityFAQs(EntityFAQ entity)
		{
			this.SendPropertyChanging();
			entity.EntityFAQ1 = this;
		}
		
		private void detach_EntityFAQs(EntityFAQ entity)
		{
			this.SendPropertyChanging();
			entity.EntityFAQ1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="firststep.EntityFAQ1")]
	public partial class EntityFAQ1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CauHoi;
		
		private string _CauTraLoi;
		
		private System.Nullable<int> _IdGroupFAQ;
		
		private System.Nullable<int> _ViTri;
		
		private EntitySet<EntityFeedbackFAQ> _EntityFeedbackFAQs;
		
		private EntityRef<EntityGroupFAQ> _EntityGroupFAQ;
		
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(int value);
	partial void OnIdChanged();
	partial void OnCauHoiChanging(string value);
	partial void OnCauHoiChanged();
	partial void OnCauTraLoiChanging(string value);
	partial void OnCauTraLoiChanged();
	partial void OnIdGroupFAQChanging(System.Nullable<int> value);
	partial void OnIdGroupFAQChanged();
	partial void OnViTriChanging(System.Nullable<int> value);
	partial void OnViTriChanged();
	#endregion
		
		public EntityFAQ1()
		{
			this._EntityFeedbackFAQs = new EntitySet<EntityFeedbackFAQ>(new Action<EntityFeedbackFAQ>(this.attach_EntityFeedbackFAQs), new Action<EntityFeedbackFAQ>(this.detach_EntityFeedbackFAQs));
			this._EntityGroupFAQ = default(EntityRef<EntityGroupFAQ>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauHoi", DbType="NVarChar(500)")]
		public string CauHoi
		{
			get
			{
				return this._CauHoi;
			}
			set
			{
				if ((this._CauHoi != value))
				{
					this.OnCauHoiChanging(value);
					this.SendPropertyChanging();
					this._CauHoi = value;
					this.SendPropertyChanged("CauHoi");
					this.OnCauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauTraLoi", DbType="NVarChar(MAX)")]
		public string CauTraLoi
		{
			get
			{
				return this._CauTraLoi;
			}
			set
			{
				if ((this._CauTraLoi != value))
				{
					this.OnCauTraLoiChanging(value);
					this.SendPropertyChanging();
					this._CauTraLoi = value;
					this.SendPropertyChanged("CauTraLoi");
					this.OnCauTraLoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdGroupFAQ", DbType="Int")]
		public System.Nullable<int> IdGroupFAQ
		{
			get
			{
				return this._IdGroupFAQ;
			}
			set
			{
				if ((this._IdGroupFAQ != value))
				{
					if (this._EntityGroupFAQ.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdGroupFAQChanging(value);
					this.SendPropertyChanging();
					this._IdGroupFAQ = value;
					this.SendPropertyChanged("IdGroupFAQ");
					this.OnIdGroupFAQChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViTri", DbType="Int")]
		public System.Nullable<int> ViTri
		{
			get
			{
				return this._ViTri;
			}
			set
			{
				if ((this._ViTri != value))
				{
					this.OnViTriChanging(value);
					this.SendPropertyChanging();
					this._ViTri = value;
					this.SendPropertyChanged("ViTri");
					this.OnViTriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityFAQ1_EntityFeedbackFAQ", Storage="_EntityFeedbackFAQs", ThisKey="Id", OtherKey="IdCauHoi")]
		public EntitySet<EntityFeedbackFAQ> EntityFeedbackFAQs
		{
			get
			{
				return this._EntityFeedbackFAQs;
			}
			set
			{
				this._EntityFeedbackFAQs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityGroupFAQ_EntityFAQ1", Storage="_EntityGroupFAQ", ThisKey="IdGroupFAQ", OtherKey="Id", IsForeignKey=true)]
		public EntityGroupFAQ EntityGroupFAQ
		{
			get
			{
				return this._EntityGroupFAQ.Entity;
			}
			set
			{
				EntityGroupFAQ previousValue = this._EntityGroupFAQ.Entity;
				if (((previousValue != value) 
							|| (this._EntityGroupFAQ.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityGroupFAQ.Entity = null;
						previousValue.EntityFAQ1s.Remove(this);
					}
					this._EntityGroupFAQ.Entity = value;
					if ((value != null))
					{
						value.EntityFAQ1s.Add(this);
						this._IdGroupFAQ = value.Id;
					}
					else
					{
						this._IdGroupFAQ = default(Nullable<int>);
					}
					this.SendPropertyChanged("EntityGroupFAQ");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EntityFeedbackFAQs(EntityFeedbackFAQ entity)
		{
			this.SendPropertyChanging();
			entity.EntityFAQ1 = this;
		}
		
		private void detach_EntityFeedbackFAQs(EntityFeedbackFAQ entity)
		{
			this.SendPropertyChanging();
			entity.EntityFAQ1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="firststep.EntityFeedbackFAQ")]
	public partial class EntityFeedbackFAQ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _IdCauHoi;
		
		private System.Nullable<int> _Feedback;
		
		private System.Nullable<System.DateTime> _Time;
		
		private EntityRef<EntityFAQ1> _EntityFAQ1;
		
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(int value);
	partial void OnIdChanged();
	partial void OnIdCauHoiChanging(System.Nullable<int> value);
	partial void OnIdCauHoiChanged();
	partial void OnFeedbackChanging(System.Nullable<int> value);
	partial void OnFeedbackChanged();
	partial void OnTimeChanging(System.Nullable<System.DateTime> value);
	partial void OnTimeChanged();
	#endregion
		
		public EntityFeedbackFAQ()
		{
			this._EntityFAQ1 = default(EntityRef<EntityFAQ1>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCauHoi", DbType="Int")]
		public System.Nullable<int> IdCauHoi
		{
			get
			{
				return this._IdCauHoi;
			}
			set
			{
				if ((this._IdCauHoi != value))
				{
					if (this._EntityFAQ1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCauHoiChanging(value);
					this.SendPropertyChanging();
					this._IdCauHoi = value;
					this.SendPropertyChanged("IdCauHoi");
					this.OnIdCauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feedback", DbType="Int")]
		public System.Nullable<int> Feedback
		{
			get
			{
				return this._Feedback;
			}
			set
			{
				if ((this._Feedback != value))
				{
					this.OnFeedbackChanging(value);
					this.SendPropertyChanging();
					this._Feedback = value;
					this.SendPropertyChanged("Feedback");
					this.OnFeedbackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityFAQ1_EntityFeedbackFAQ", Storage="_EntityFAQ1", ThisKey="IdCauHoi", OtherKey="Id", IsForeignKey=true)]
		public EntityFAQ1 EntityFAQ1
		{
			get
			{
				return this._EntityFAQ1.Entity;
			}
			set
			{
				EntityFAQ1 previousValue = this._EntityFAQ1.Entity;
				if (((previousValue != value) 
							|| (this._EntityFAQ1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityFAQ1.Entity = null;
						previousValue.EntityFeedbackFAQs.Remove(this);
					}
					this._EntityFAQ1.Entity = value;
					if ((value != null))
					{
						value.EntityFeedbackFAQs.Add(this);
						this._IdCauHoi = value.Id;
					}
					else
					{
						this._IdCauHoi = default(Nullable<int>);
					}
					this.SendPropertyChanged("EntityFAQ1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="firststep.EntityGroupFAQ")]
	public partial class EntityGroupFAQ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TenGroup;
		
		private System.Nullable<int> _IdGroupFAQ;
		
		private System.Nullable<int> _IdLoaiFAQ;
		
		private System.Nullable<int> _ViTri;
		
		private EntitySet<EntityFAQ1> _EntityFAQ1s;
		
		private EntityRef<EntityLoaiFAQ> _EntityLoaiFAQ;
		
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(int value);
	partial void OnIdChanged();
	partial void OnTenGroupChanging(string value);
	partial void OnTenGroupChanged();
	partial void OnIdGroupFAQChanging(System.Nullable<int> value);
	partial void OnIdGroupFAQChanged();
	partial void OnIdLoaiFAQChanging(System.Nullable<int> value);
	partial void OnIdLoaiFAQChanged();
	partial void OnViTriChanging(System.Nullable<int> value);
	partial void OnViTriChanged();
	#endregion
		
		public EntityGroupFAQ()
		{
			this._EntityFAQ1s = new EntitySet<EntityFAQ1>(new Action<EntityFAQ1>(this.attach_EntityFAQ1s), new Action<EntityFAQ1>(this.detach_EntityFAQ1s));
			this._EntityLoaiFAQ = default(EntityRef<EntityLoaiFAQ>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenGroup", DbType="NVarChar(500)")]
		public string TenGroup
		{
			get
			{
				return this._TenGroup;
			}
			set
			{
				if ((this._TenGroup != value))
				{
					this.OnTenGroupChanging(value);
					this.SendPropertyChanging();
					this._TenGroup = value;
					this.SendPropertyChanged("TenGroup");
					this.OnTenGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdGroupFAQ", DbType="Int")]
		public System.Nullable<int> IdGroupFAQ
		{
			get
			{
				return this._IdGroupFAQ;
			}
			set
			{
				if ((this._IdGroupFAQ != value))
				{
					this.OnIdGroupFAQChanging(value);
					this.SendPropertyChanging();
					this._IdGroupFAQ = value;
					this.SendPropertyChanged("IdGroupFAQ");
					this.OnIdGroupFAQChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdLoaiFAQ", DbType="Int")]
		public System.Nullable<int> IdLoaiFAQ
		{
			get
			{
				return this._IdLoaiFAQ;
			}
			set
			{
				if ((this._IdLoaiFAQ != value))
				{
					if (this._EntityLoaiFAQ.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdLoaiFAQChanging(value);
					this.SendPropertyChanging();
					this._IdLoaiFAQ = value;
					this.SendPropertyChanged("IdLoaiFAQ");
					this.OnIdLoaiFAQChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViTri", DbType="Int")]
		public System.Nullable<int> ViTri
		{
			get
			{
				return this._ViTri;
			}
			set
			{
				if ((this._ViTri != value))
				{
					this.OnViTriChanging(value);
					this.SendPropertyChanging();
					this._ViTri = value;
					this.SendPropertyChanged("ViTri");
					this.OnViTriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityGroupFAQ_EntityFAQ1", Storage="_EntityFAQ1s", ThisKey="Id", OtherKey="IdGroupFAQ")]
		public EntitySet<EntityFAQ1> EntityFAQ1s
		{
			get
			{
				return this._EntityFAQ1s;
			}
			set
			{
				this._EntityFAQ1s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityLoaiFAQ_EntityGroupFAQ", Storage="_EntityLoaiFAQ", ThisKey="IdLoaiFAQ", OtherKey="Id", IsForeignKey=true)]
		public EntityLoaiFAQ EntityLoaiFAQ
		{
			get
			{
				return this._EntityLoaiFAQ.Entity;
			}
			set
			{
				EntityLoaiFAQ previousValue = this._EntityLoaiFAQ.Entity;
				if (((previousValue != value) 
							|| (this._EntityLoaiFAQ.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityLoaiFAQ.Entity = null;
						previousValue.EntityGroupFAQs.Remove(this);
					}
					this._EntityLoaiFAQ.Entity = value;
					if ((value != null))
					{
						value.EntityGroupFAQs.Add(this);
						this._IdLoaiFAQ = value.Id;
					}
					else
					{
						this._IdLoaiFAQ = default(Nullable<int>);
					}
					this.SendPropertyChanged("EntityLoaiFAQ");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EntityFAQ1s(EntityFAQ1 entity)
		{
			this.SendPropertyChanging();
			entity.EntityGroupFAQ = this;
		}
		
		private void detach_EntityFAQ1s(EntityFAQ1 entity)
		{
			this.SendPropertyChanging();
			entity.EntityGroupFAQ = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="firststep.EntityHomePage")]
	public partial class EntityHomePage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _IdModuleDanhMuc1;
		
		private System.Nullable<int> _IdModuleDanhMuc2;
		
		private System.Nullable<int> _IdModuleDanhMuc3;
		
		private EntityRef<EntityDanhMuc> _EntityDanhMuc;
		
		private EntityRef<EntityDanhMuc> _EntityDanhMuc1;
		
		private EntityRef<EntityDanhMuc> _EntityDanhMuc2;
		
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(int value);
	partial void OnIdChanged();
	partial void OnIdModuleDanhMuc1Changing(System.Nullable<int> value);
	partial void OnIdModuleDanhMuc1Changed();
	partial void OnIdModuleDanhMuc2Changing(System.Nullable<int> value);
	partial void OnIdModuleDanhMuc2Changed();
	partial void OnIdModuleDanhMuc3Changing(System.Nullable<int> value);
	partial void OnIdModuleDanhMuc3Changed();
	#endregion
		
		public EntityHomePage()
		{
			this._EntityDanhMuc = default(EntityRef<EntityDanhMuc>);
			this._EntityDanhMuc1 = default(EntityRef<EntityDanhMuc>);
			this._EntityDanhMuc2 = default(EntityRef<EntityDanhMuc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdModuleDanhMuc1", DbType="Int")]
		public System.Nullable<int> IdModuleDanhMuc1
		{
			get
			{
				return this._IdModuleDanhMuc1;
			}
			set
			{
				if ((this._IdModuleDanhMuc1 != value))
				{
					if (this._EntityDanhMuc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdModuleDanhMuc1Changing(value);
					this.SendPropertyChanging();
					this._IdModuleDanhMuc1 = value;
					this.SendPropertyChanged("IdModuleDanhMuc1");
					this.OnIdModuleDanhMuc1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdModuleDanhMuc2", DbType="Int")]
		public System.Nullable<int> IdModuleDanhMuc2
		{
			get
			{
				return this._IdModuleDanhMuc2;
			}
			set
			{
				if ((this._IdModuleDanhMuc2 != value))
				{
					if (this._EntityDanhMuc1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdModuleDanhMuc2Changing(value);
					this.SendPropertyChanging();
					this._IdModuleDanhMuc2 = value;
					this.SendPropertyChanged("IdModuleDanhMuc2");
					this.OnIdModuleDanhMuc2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdModuleDanhMuc3", DbType="Int")]
		public System.Nullable<int> IdModuleDanhMuc3
		{
			get
			{
				return this._IdModuleDanhMuc3;
			}
			set
			{
				if ((this._IdModuleDanhMuc3 != value))
				{
					if (this._EntityDanhMuc2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdModuleDanhMuc3Changing(value);
					this.SendPropertyChanging();
					this._IdModuleDanhMuc3 = value;
					this.SendPropertyChanged("IdModuleDanhMuc3");
					this.OnIdModuleDanhMuc3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDanhMuc_EntityHomePage", Storage="_EntityDanhMuc", ThisKey="IdModuleDanhMuc1", OtherKey="Id", IsForeignKey=true)]
		public EntityDanhMuc EntityDanhMuc
		{
			get
			{
				return this._EntityDanhMuc.Entity;
			}
			set
			{
				EntityDanhMuc previousValue = this._EntityDanhMuc.Entity;
				if (((previousValue != value) 
							|| (this._EntityDanhMuc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityDanhMuc.Entity = null;
						previousValue.EntityHomePages.Remove(this);
					}
					this._EntityDanhMuc.Entity = value;
					if ((value != null))
					{
						value.EntityHomePages.Add(this);
						this._IdModuleDanhMuc1 = value.Id;
					}
					else
					{
						this._IdModuleDanhMuc1 = default(Nullable<int>);
					}
					this.SendPropertyChanged("EntityDanhMuc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDanhMuc_EntityHomePage1", Storage="_EntityDanhMuc1", ThisKey="IdModuleDanhMuc2", OtherKey="Id", IsForeignKey=true)]
		public EntityDanhMuc EntityDanhMuc1
		{
			get
			{
				return this._EntityDanhMuc1.Entity;
			}
			set
			{
				EntityDanhMuc previousValue = this._EntityDanhMuc1.Entity;
				if (((previousValue != value) 
							|| (this._EntityDanhMuc1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityDanhMuc1.Entity = null;
						previousValue.EntityHomePages1.Remove(this);
					}
					this._EntityDanhMuc1.Entity = value;
					if ((value != null))
					{
						value.EntityHomePages1.Add(this);
						this._IdModuleDanhMuc2 = value.Id;
					}
					else
					{
						this._IdModuleDanhMuc2 = default(Nullable<int>);
					}
					this.SendPropertyChanged("EntityDanhMuc1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDanhMuc_EntityHomePage2", Storage="_EntityDanhMuc2", ThisKey="IdModuleDanhMuc3", OtherKey="Id", IsForeignKey=true)]
		public EntityDanhMuc EntityDanhMuc2
		{
			get
			{
				return this._EntityDanhMuc2.Entity;
			}
			set
			{
				EntityDanhMuc previousValue = this._EntityDanhMuc2.Entity;
				if (((previousValue != value) 
							|| (this._EntityDanhMuc2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityDanhMuc2.Entity = null;
						previousValue.EntityHomePages2.Remove(this);
					}
					this._EntityDanhMuc2.Entity = value;
					if ((value != null))
					{
						value.EntityHomePages2.Add(this);
						this._IdModuleDanhMuc3 = value.Id;
					}
					else
					{
						this._IdModuleDanhMuc3 = default(Nullable<int>);
					}
					this.SendPropertyChanged("EntityDanhMuc2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="firststep.EntityLoaiFAQ")]
	public partial class EntityLoaiFAQ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TenFAQ;
		
		private EntitySet<EntityGroupFAQ> _EntityGroupFAQs;
		
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(int value);
	partial void OnIdChanged();
	partial void OnTenFAQChanging(string value);
	partial void OnTenFAQChanged();
	#endregion
		
		public EntityLoaiFAQ()
		{
			this._EntityGroupFAQs = new EntitySet<EntityGroupFAQ>(new Action<EntityGroupFAQ>(this.attach_EntityGroupFAQs), new Action<EntityGroupFAQ>(this.detach_EntityGroupFAQs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenFAQ", DbType="NVarChar(50)")]
		public string TenFAQ
		{
			get
			{
				return this._TenFAQ;
			}
			set
			{
				if ((this._TenFAQ != value))
				{
					this.OnTenFAQChanging(value);
					this.SendPropertyChanging();
					this._TenFAQ = value;
					this.SendPropertyChanged("TenFAQ");
					this.OnTenFAQChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityLoaiFAQ_EntityGroupFAQ", Storage="_EntityGroupFAQs", ThisKey="Id", OtherKey="IdLoaiFAQ")]
		public EntitySet<EntityGroupFAQ> EntityGroupFAQs
		{
			get
			{
				return this._EntityGroupFAQs;
			}
			set
			{
				this._EntityGroupFAQs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EntityGroupFAQs(EntityGroupFAQ entity)
		{
			this.SendPropertyChanging();
			entity.EntityLoaiFAQ = this;
		}
		
		private void detach_EntityGroupFAQs(EntityGroupFAQ entity)
		{
			this.SendPropertyChanging();
			entity.EntityLoaiFAQ = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="firststep.EntityLoaiTaiKhoan")]
	public partial class EntityLoaiTaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TenLoaiTaiKhoan;
		
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(int value);
	partial void OnIdChanged();
	partial void OnTenLoaiTaiKhoanChanging(string value);
	partial void OnTenLoaiTaiKhoanChanged();
	#endregion
		
		public EntityLoaiTaiKhoan()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiTaiKhoan", DbType="NVarChar(50)")]
		public string TenLoaiTaiKhoan
		{
			get
			{
				return this._TenLoaiTaiKhoan;
			}
			set
			{
				if ((this._TenLoaiTaiKhoan != value))
				{
					this.OnTenLoaiTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiTaiKhoan = value;
					this.SendPropertyChanged("TenLoaiTaiKhoan");
					this.OnTenLoaiTaiKhoanChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="firststep.EntityNhomChienDich")]
	public partial class EntityNhomChienDich : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _IdDuAn;
		
		private System.Nullable<int> _IdUser;
		
		private string _VaiTro;
		
		private System.Nullable<bool> _TrangThai;
		
		private EntityRef<EntityDuAn> _EntityDuAn;
		
		private EntityRef<EntityUser> _EntityUser;
		
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(int value);
	partial void OnIdChanged();
	partial void OnIdDuAnChanging(System.Nullable<int> value);
	partial void OnIdDuAnChanged();
	partial void OnIdUserChanging(System.Nullable<int> value);
	partial void OnIdUserChanged();
	partial void OnVaiTroChanging(string value);
	partial void OnVaiTroChanged();
	partial void OnTrangThaiChanging(System.Nullable<bool> value);
	partial void OnTrangThaiChanged();
	#endregion
		
		public EntityNhomChienDich()
		{
			this._EntityDuAn = default(EntityRef<EntityDuAn>);
			this._EntityUser = default(EntityRef<EntityUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDuAn", DbType="Int")]
		public System.Nullable<int> IdDuAn
		{
			get
			{
				return this._IdDuAn;
			}
			set
			{
				if ((this._IdDuAn != value))
				{
					if (this._EntityDuAn.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDuAnChanging(value);
					this.SendPropertyChanging();
					this._IdDuAn = value;
					this.SendPropertyChanged("IdDuAn");
					this.OnIdDuAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUser", DbType="Int")]
		public System.Nullable<int> IdUser
		{
			get
			{
				return this._IdUser;
			}
			set
			{
				if ((this._IdUser != value))
				{
					if (this._EntityUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUserChanging(value);
					this.SendPropertyChanging();
					this._IdUser = value;
					this.SendPropertyChanged("IdUser");
					this.OnIdUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VaiTro", DbType="NVarChar(50)")]
		public string VaiTro
		{
			get
			{
				return this._VaiTro;
			}
			set
			{
				if ((this._VaiTro != value))
				{
					this.OnVaiTroChanging(value);
					this.SendPropertyChanging();
					this._VaiTro = value;
					this.SendPropertyChanged("VaiTro");
					this.OnVaiTroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Bit")]
		public System.Nullable<bool> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDuAn_EntityNhomChienDich", Storage="_EntityDuAn", ThisKey="IdDuAn", OtherKey="Id", IsForeignKey=true)]
		public EntityDuAn EntityDuAn
		{
			get
			{
				return this._EntityDuAn.Entity;
			}
			set
			{
				EntityDuAn previousValue = this._EntityDuAn.Entity;
				if (((previousValue != value) 
							|| (this._EntityDuAn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityDuAn.Entity = null;
						previousValue.EntityNhomChienDiches.Remove(this);
					}
					this._EntityDuAn.Entity = value;
					if ((value != null))
					{
						value.EntityNhomChienDiches.Add(this);
						this._IdDuAn = value.Id;
					}
					else
					{
						this._IdDuAn = default(Nullable<int>);
					}
					this.SendPropertyChanged("EntityDuAn");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityUser_EntityNhomChienDich", Storage="_EntityUser", ThisKey="IdUser", OtherKey="Id", IsForeignKey=true)]
		public EntityUser EntityUser
		{
			get
			{
				return this._EntityUser.Entity;
			}
			set
			{
				EntityUser previousValue = this._EntityUser.Entity;
				if (((previousValue != value) 
							|| (this._EntityUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityUser.Entity = null;
						previousValue.EntityNhomChienDiches.Remove(this);
					}
					this._EntityUser.Entity = value;
					if ((value != null))
					{
						value.EntityNhomChienDiches.Add(this);
						this._IdUser = value.Id;
					}
					else
					{
						this._IdUser = default(Nullable<int>);
					}
					this.SendPropertyChanged("EntityUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="firststep.EntityNoiDungLink")]
	public partial class EntityNoiDungLink : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Link;
		
		private System.Nullable<int> _Type;
		
		private System.Nullable<int> _IdDuAn;
		
		private EntityRef<EntityDuAn> _EntityDuAn;
		
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(int value);
	partial void OnIdChanged();
	partial void OnLinkChanging(string value);
	partial void OnLinkChanged();
	partial void OnTypeChanging(System.Nullable<int> value);
	partial void OnTypeChanged();
	partial void OnIdDuAnChanging(System.Nullable<int> value);
	partial void OnIdDuAnChanged();
	#endregion
		
		public EntityNoiDungLink()
		{
			this._EntityDuAn = default(EntityRef<EntityDuAn>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="NVarChar(MAX)")]
		public string Link
		{
			get
			{
				return this._Link;
			}
			set
			{
				if ((this._Link != value))
				{
					this.OnLinkChanging(value);
					this.SendPropertyChanging();
					this._Link = value;
					this.SendPropertyChanged("Link");
					this.OnLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDuAn", DbType="Int")]
		public System.Nullable<int> IdDuAn
		{
			get
			{
				return this._IdDuAn;
			}
			set
			{
				if ((this._IdDuAn != value))
				{
					if (this._EntityDuAn.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDuAnChanging(value);
					this.SendPropertyChanging();
					this._IdDuAn = value;
					this.SendPropertyChanged("IdDuAn");
					this.OnIdDuAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDuAn_EntityNoiDungLink", Storage="_EntityDuAn", ThisKey="IdDuAn", OtherKey="Id", IsForeignKey=true)]
		public EntityDuAn EntityDuAn
		{
			get
			{
				return this._EntityDuAn.Entity;
			}
			set
			{
				EntityDuAn previousValue = this._EntityDuAn.Entity;
				if (((previousValue != value) 
							|| (this._EntityDuAn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityDuAn.Entity = null;
						previousValue.EntityNoiDungLinks.Remove(this);
					}
					this._EntityDuAn.Entity = value;
					if ((value != null))
					{
						value.EntityNoiDungLinks.Add(this);
						this._IdDuAn = value.Id;
					}
					else
					{
						this._IdDuAn = default(Nullable<int>);
					}
					this.SendPropertyChanged("EntityDuAn");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="firststep.EntityTheoDoiDuAn")]
	public partial class EntityTheoDoiDuAn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdDuAn;
		
		private int _IdUser;
		
		private int _Watch;
		
		private EntityRef<EntityDuAn> _EntityDuAn;
		
		private EntityRef<EntityUser> _EntityUser;
		
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(int value);
	partial void OnIdChanged();
	partial void OnIdDuAnChanging(int value);
	partial void OnIdDuAnChanged();
	partial void OnIdUserChanging(int value);
	partial void OnIdUserChanged();
	partial void OnWatchChanging(int value);
	partial void OnWatchChanged();
	#endregion
		
		public EntityTheoDoiDuAn()
		{
			this._EntityDuAn = default(EntityRef<EntityDuAn>);
			this._EntityUser = default(EntityRef<EntityUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDuAn", DbType="Int NOT NULL")]
		public int IdDuAn
		{
			get
			{
				return this._IdDuAn;
			}
			set
			{
				if ((this._IdDuAn != value))
				{
					if (this._EntityDuAn.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDuAnChanging(value);
					this.SendPropertyChanging();
					this._IdDuAn = value;
					this.SendPropertyChanged("IdDuAn");
					this.OnIdDuAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUser", DbType="Int NOT NULL")]
		public int IdUser
		{
			get
			{
				return this._IdUser;
			}
			set
			{
				if ((this._IdUser != value))
				{
					if (this._EntityUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUserChanging(value);
					this.SendPropertyChanging();
					this._IdUser = value;
					this.SendPropertyChanged("IdUser");
					this.OnIdUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Watch", DbType="Int NOT NULL")]
		public int Watch
		{
			get
			{
				return this._Watch;
			}
			set
			{
				if ((this._Watch != value))
				{
					this.OnWatchChanging(value);
					this.SendPropertyChanging();
					this._Watch = value;
					this.SendPropertyChanged("Watch");
					this.OnWatchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDuAn_EntityTheoDoiDuAn", Storage="_EntityDuAn", ThisKey="IdDuAn", OtherKey="Id", IsForeignKey=true)]
		public EntityDuAn EntityDuAn
		{
			get
			{
				return this._EntityDuAn.Entity;
			}
			set
			{
				EntityDuAn previousValue = this._EntityDuAn.Entity;
				if (((previousValue != value) 
							|| (this._EntityDuAn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityDuAn.Entity = null;
						previousValue.EntityTheoDoiDuAns.Remove(this);
					}
					this._EntityDuAn.Entity = value;
					if ((value != null))
					{
						value.EntityTheoDoiDuAns.Add(this);
						this._IdDuAn = value.Id;
					}
					else
					{
						this._IdDuAn = default(int);
					}
					this.SendPropertyChanged("EntityDuAn");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityUser_EntityTheoDoiDuAn", Storage="_EntityUser", ThisKey="IdUser", OtherKey="Id", IsForeignKey=true)]
		public EntityUser EntityUser
		{
			get
			{
				return this._EntityUser.Entity;
			}
			set
			{
				EntityUser previousValue = this._EntityUser.Entity;
				if (((previousValue != value) 
							|| (this._EntityUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityUser.Entity = null;
						previousValue.EntityTheoDoiDuAns.Remove(this);
					}
					this._EntityUser.Entity = value;
					if ((value != null))
					{
						value.EntityTheoDoiDuAns.Add(this);
						this._IdUser = value.Id;
					}
					else
					{
						this._IdUser = default(int);
					}
					this.SendPropertyChanged("EntityUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="firststep.EntityThongTinDuAn")]
	public partial class EntityThongTinDuAn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _IdDuAn;
		
		private string _TieuDe;
		
		private string _ThongTinWhichPerson;
		
		private System.Nullable<int> _IdDanhMuc;
		
		private string _NoiDung;
		
		private System.Nullable<int> _IdLocation;
		
		private EntityRef<EntityDanhMuc> _EntityDanhMuc;
		
		private EntityRef<EntityDuAn> _EntityDuAn;
		
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(int value);
	partial void OnIdChanged();
	partial void OnIdDuAnChanging(System.Nullable<int> value);
	partial void OnIdDuAnChanged();
	partial void OnTieuDeChanging(string value);
	partial void OnTieuDeChanged();
	partial void OnThongTinWhichPersonChanging(string value);
	partial void OnThongTinWhichPersonChanged();
	partial void OnIdDanhMucChanging(System.Nullable<int> value);
	partial void OnIdDanhMucChanged();
	partial void OnNoiDungChanging(string value);
	partial void OnNoiDungChanged();
	partial void OnIdLocationChanging(System.Nullable<int> value);
	partial void OnIdLocationChanged();
	#endregion
		
		public EntityThongTinDuAn()
		{
			this._EntityDanhMuc = default(EntityRef<EntityDanhMuc>);
			this._EntityDuAn = default(EntityRef<EntityDuAn>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDuAn", DbType="Int")]
		public System.Nullable<int> IdDuAn
		{
			get
			{
				return this._IdDuAn;
			}
			set
			{
				if ((this._IdDuAn != value))
				{
					if (this._EntityDuAn.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDuAnChanging(value);
					this.SendPropertyChanging();
					this._IdDuAn = value;
					this.SendPropertyChanged("IdDuAn");
					this.OnIdDuAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TieuDe", DbType="NVarChar(1050)")]
		public string TieuDe
		{
			get
			{
				return this._TieuDe;
			}
			set
			{
				if ((this._TieuDe != value))
				{
					this.OnTieuDeChanging(value);
					this.SendPropertyChanging();
					this._TieuDe = value;
					this.SendPropertyChanged("TieuDe");
					this.OnTieuDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThongTinWhichPerson", DbType="NVarChar(1050)")]
		public string ThongTinWhichPerson
		{
			get
			{
				return this._ThongTinWhichPerson;
			}
			set
			{
				if ((this._ThongTinWhichPerson != value))
				{
					this.OnThongTinWhichPersonChanging(value);
					this.SendPropertyChanging();
					this._ThongTinWhichPerson = value;
					this.SendPropertyChanged("ThongTinWhichPerson");
					this.OnThongTinWhichPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDanhMuc", DbType="Int")]
		public System.Nullable<int> IdDanhMuc
		{
			get
			{
				return this._IdDanhMuc;
			}
			set
			{
				if ((this._IdDanhMuc != value))
				{
					if (this._EntityDanhMuc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDanhMucChanging(value);
					this.SendPropertyChanging();
					this._IdDanhMuc = value;
					this.SendPropertyChanged("IdDanhMuc");
					this.OnIdDanhMucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(MAX)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdLocation", DbType="Int")]
		public System.Nullable<int> IdLocation
		{
			get
			{
				return this._IdLocation;
			}
			set
			{
				if ((this._IdLocation != value))
				{
					this.OnIdLocationChanging(value);
					this.SendPropertyChanging();
					this._IdLocation = value;
					this.SendPropertyChanged("IdLocation");
					this.OnIdLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDanhMuc_EntityThongTinDuAn", Storage="_EntityDanhMuc", ThisKey="IdDanhMuc", OtherKey="Id", IsForeignKey=true)]
		public EntityDanhMuc EntityDanhMuc
		{
			get
			{
				return this._EntityDanhMuc.Entity;
			}
			set
			{
				EntityDanhMuc previousValue = this._EntityDanhMuc.Entity;
				if (((previousValue != value) 
							|| (this._EntityDanhMuc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityDanhMuc.Entity = null;
						previousValue.EntityThongTinDuAns.Remove(this);
					}
					this._EntityDanhMuc.Entity = value;
					if ((value != null))
					{
						value.EntityThongTinDuAns.Add(this);
						this._IdDanhMuc = value.Id;
					}
					else
					{
						this._IdDanhMuc = default(Nullable<int>);
					}
					this.SendPropertyChanged("EntityDanhMuc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityDuAn_EntityThongTinDuAn", Storage="_EntityDuAn", ThisKey="IdDuAn", OtherKey="Id", IsForeignKey=true)]
		public EntityDuAn EntityDuAn
		{
			get
			{
				return this._EntityDuAn.Entity;
			}
			set
			{
				EntityDuAn previousValue = this._EntityDuAn.Entity;
				if (((previousValue != value) 
							|| (this._EntityDuAn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityDuAn.Entity = null;
						previousValue.EntityThongTinDuAns.Remove(this);
					}
					this._EntityDuAn.Entity = value;
					if ((value != null))
					{
						value.EntityThongTinDuAns.Add(this);
						this._IdDuAn = value.Id;
					}
					else
					{
						this._IdDuAn = default(Nullable<int>);
					}
					this.SendPropertyChanged("EntityDuAn");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="firststep.EntityThongTinTaiKhoan")]
	public partial class EntityThongTinTaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Col1;
		
		private string _Col2;
		
		private string _Col3;
		
		private string _Col4;
		
		private string _Col5;
		
		private string _Col6;
		
		private string _Col7;
		
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(int value);
	partial void OnIdChanged();
	partial void OnCol1Changing(string value);
	partial void OnCol1Changed();
	partial void OnCol2Changing(string value);
	partial void OnCol2Changed();
	partial void OnCol3Changing(string value);
	partial void OnCol3Changed();
	partial void OnCol4Changing(string value);
	partial void OnCol4Changed();
	partial void OnCol5Changing(string value);
	partial void OnCol5Changed();
	partial void OnCol6Changing(string value);
	partial void OnCol6Changed();
	partial void OnCol7Changing(string value);
	partial void OnCol7Changed();
	#endregion
		
		public EntityThongTinTaiKhoan()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Col1", DbType="NVarChar(200)")]
		public string Col1
		{
			get
			{
				return this._Col1;
			}
			set
			{
				if ((this._Col1 != value))
				{
					this.OnCol1Changing(value);
					this.SendPropertyChanging();
					this._Col1 = value;
					this.SendPropertyChanged("Col1");
					this.OnCol1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Col2", DbType="NVarChar(200)")]
		public string Col2
		{
			get
			{
				return this._Col2;
			}
			set
			{
				if ((this._Col2 != value))
				{
					this.OnCol2Changing(value);
					this.SendPropertyChanging();
					this._Col2 = value;
					this.SendPropertyChanged("Col2");
					this.OnCol2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Col3", DbType="NVarChar(200)")]
		public string Col3
		{
			get
			{
				return this._Col3;
			}
			set
			{
				if ((this._Col3 != value))
				{
					this.OnCol3Changing(value);
					this.SendPropertyChanging();
					this._Col3 = value;
					this.SendPropertyChanged("Col3");
					this.OnCol3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Col4", DbType="NVarChar(200)")]
		public string Col4
		{
			get
			{
				return this._Col4;
			}
			set
			{
				if ((this._Col4 != value))
				{
					this.OnCol4Changing(value);
					this.SendPropertyChanging();
					this._Col4 = value;
					this.SendPropertyChanged("Col4");
					this.OnCol4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Col5", DbType="NVarChar(200)")]
		public string Col5
		{
			get
			{
				return this._Col5;
			}
			set
			{
				if ((this._Col5 != value))
				{
					this.OnCol5Changing(value);
					this.SendPropertyChanging();
					this._Col5 = value;
					this.SendPropertyChanged("Col5");
					this.OnCol5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Col6", DbType="NVarChar(200)")]
		public string Col6
		{
			get
			{
				return this._Col6;
			}
			set
			{
				if ((this._Col6 != value))
				{
					this.OnCol6Changing(value);
					this.SendPropertyChanging();
					this._Col6 = value;
					this.SendPropertyChanged("Col6");
					this.OnCol6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Col7", DbType="NVarChar(500)")]
		public string Col7
		{
			get
			{
				return this._Col7;
			}
			set
			{
				if ((this._Col7 != value))
				{
					this.OnCol7Changing(value);
					this.SendPropertyChanging();
					this._Col7 = value;
					this.SendPropertyChanged("Col7");
					this.OnCol7Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="firststep.EntityTinNhan")]
	public partial class EntityTinNhan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _IdUserGui;
		
		private System.Nullable<int> _IdUserNhan;
		
		private string _NoiDung;
		
		private System.Nullable<int> _TrangThai;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<int> _IdDuAn;
		
		private EntityRef<EntityUser> _EntityUser;
		
		private EntityRef<EntityUser> _EntityUser1;
		
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIdChanging(int value);
	partial void OnIdChanged();
	partial void OnIdUserGuiChanging(System.Nullable<int> value);
	partial void OnIdUserGuiChanged();
	partial void OnIdUserNhanChanging(System.Nullable<int> value);
	partial void OnIdUserNhanChanged();
	partial void OnNoiDungChanging(string value);
	partial void OnNoiDungChanged();
	partial void OnTrangThaiChanging(System.Nullable<int> value);
	partial void OnTrangThaiChanged();
	partial void OnDateChanging(System.Nullable<System.DateTime> value);
	partial void OnDateChanged();
	partial void OnIdDuAnChanging(System.Nullable<int> value);
	partial void OnIdDuAnChanged();
	#endregion
		
		public EntityTinNhan()
		{
			this._EntityUser = default(EntityRef<EntityUser>);
			this._EntityUser1 = default(EntityRef<EntityUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUserGui", DbType="Int")]
		public System.Nullable<int> IdUserGui
		{
			get
			{
				return this._IdUserGui;
			}
			set
			{
				if ((this._IdUserGui != value))
				{
					if (this._EntityUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUserGuiChanging(value);
					this.SendPropertyChanging();
					this._IdUserGui = value;
					this.SendPropertyChanged("IdUserGui");
					this.OnIdUserGuiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUserNhan", DbType="Int")]
		public System.Nullable<int> IdUserNhan
		{
			get
			{
				return this._IdUserNhan;
			}
			set
			{
				if ((this._IdUserNhan != value))
				{
					if (this._EntityUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUserNhanChanging(value);
					this.SendPropertyChanging();
					this._IdUserNhan = value;
					this.SendPropertyChanged("IdUserNhan");
					this.OnIdUserNhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Int")]
		public System.Nullable<int> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDuAn", DbType="Int")]
		public System.Nullable<int> IdDuAn
		{
			get
			{
				return this._IdDuAn;
			}
			set
			{
				if ((this._IdDuAn != value))
				{
					this.OnIdDuAnChanging(value);
					this.SendPropertyChanging();
					this._IdDuAn = value;
					this.SendPropertyChanged("IdDuAn");
					this.OnIdDuAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityUser_EntityTinNhan", Storage="_EntityUser", ThisKey="IdUserGui", OtherKey="Id", IsForeignKey=true)]
		public EntityUser EntityUser
		{
			get
			{
				return this._EntityUser.Entity;
			}
			set
			{
				EntityUser previousValue = this._EntityUser.Entity;
				if (((previousValue != value) 
							|| (this._EntityUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityUser.Entity = null;
						previousValue.EntityTinNhans.Remove(this);
					}
					this._EntityUser.Entity = value;
					if ((value != null))
					{
						value.EntityTinNhans.Add(this);
						this._IdUserGui = value.Id;
					}
					else
					{
						this._IdUserGui = default(Nullable<int>);
					}
					this.SendPropertyChanged("EntityUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityUser_EntityTinNhan1", Storage="_EntityUser1", ThisKey="IdUserNhan", OtherKey="Id", IsForeignKey=true)]
		public EntityUser EntityUser1
		{
			get
			{
				return this._EntityUser1.Entity;
			}
			set
			{
				EntityUser previousValue = this._EntityUser1.Entity;
				if (((previousValue != value) 
							|| (this._EntityUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityUser1.Entity = null;
						previousValue.EntityTinNhans1.Remove(this);
					}
					this._EntityUser1.Entity = value;
					if ((value != null))
					{
						value.EntityTinNhans1.Add(this);
						this._IdUserNhan = value.Id;
					}
					else
					{
						this._IdUserNhan = default(Nullable<int>);
					}
					this.SendPropertyChanged("EntityUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
